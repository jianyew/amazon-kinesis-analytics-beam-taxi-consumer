{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "BeamTaxiCount-Build": {
        "id": "BeamTaxiCount-Build",
        "path": "BeamTaxiCount-Build",
        "children": {
          "Bucket": {
            "id": "Bucket",
            "path": "BeamTaxiCount-Build/Bucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "BeamTaxiCount-Build/Bucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "versioningConfiguration": {
                      "status": "Enabled"
                    }
                  }
                }
              },
              "Notifications": {
                "id": "Notifications",
                "path": "BeamTaxiCount-Build/Bucket/Notifications"
              }
            }
          },
          "EmptyBucket": {
            "id": "EmptyBucket",
            "path": "BeamTaxiCount-Build/EmptyBucket",
            "children": {
              "EmptyBucketLambda": {
                "id": "EmptyBucketLambda",
                "path": "BeamTaxiCount-Build/EmptyBucket/EmptyBucketLambda",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "BeamTaxiCount-Build/EmptyBucket/EmptyBucketLambda/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Build/EmptyBucket/EmptyBucketLambda/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "BeamTaxiCount-Build/EmptyBucket/EmptyBucketLambda/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Build/EmptyBucket/EmptyBucketLambda/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "s3:GetObject*",
                                        "s3:GetBucket*",
                                        "s3:List*",
                                        "s3:DeleteObject*",
                                        "s3:PutObject*",
                                        "s3:Abort*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "Bucket83908E77",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": [
                                                  "Bucket83908E77",
                                                  "Arn"
                                                ]
                                              },
                                              "/*"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "EmptyBucketEmptyBucketLambdaServiceRoleDefaultPolicy0872AADF",
                                "roles": [
                                  {
                                    "Ref": "EmptyBucketEmptyBucketLambdaServiceRole67452BDD"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Build/EmptyBucket/EmptyBucketLambda/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "zipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\n\ndef empty_bucket(event, context):\n    bucket_name = os.environ['bucket_name']\n\n    try:\n        if event['RequestType'] == 'Delete':\n            print(\"empty bucket: \" + bucket_name)\n            \n            bucket = boto3.resource('s3').Bucket(bucket_name)\n            bucket.object_versions.delete()\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})"
                        },
                        "handler": "index.empty_bucket",
                        "role": {
                          "Fn::GetAtt": [
                            "EmptyBucketEmptyBucketLambdaServiceRole67452BDD",
                            "Arn"
                          ]
                        },
                        "runtime": "python3.7",
                        "environment": {
                          "variables": {
                            "bucket_name": {
                              "Ref": "Bucket83908E77"
                            }
                          }
                        },
                        "memorySize": 512,
                        "timeout": 900
                      }
                    }
                  }
                }
              },
              "EmptyBucketResource": {
                "id": "EmptyBucketResource",
                "path": "BeamTaxiCount-Build/EmptyBucket/EmptyBucketResource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFormation::CustomResource",
                  "aws:cdk:cloudformation:props": {
                    "serviceToken": {
                      "Fn::GetAtt": [
                        "EmptyBucketEmptyBucketLambdaD0E9E93D",
                        "Arn"
                      ]
                    }
                  }
                }
              }
            }
          },
          "S3Bucket": {
            "id": "S3Bucket",
            "path": "BeamTaxiCount-Build/S3Bucket"
          },
          "BeamTaxiConsumerBuildPipeline": {
            "id": "BeamTaxiConsumerBuildPipeline",
            "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline",
            "children": {
              "DownloadLambda": {
                "id": "DownloadLambda",
                "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/DownloadLambda",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/DownloadLambda/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/DownloadLambda/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/DownloadLambda/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/DownloadLambda/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "s3:PutObject*",
                                        "s3:Abort*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            {
                                              "Fn::GetAtt": [
                                                "Bucket83908E77",
                                                "Arn"
                                              ]
                                            },
                                            "/*"
                                          ]
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "BeamTaxiConsumerBuildPipelineDownloadLambdaServiceRoleDefaultPolicy841A2736",
                                "roles": [
                                  {
                                    "Ref": "BeamTaxiConsumerBuildPipelineDownloadLambdaServiceRoleDDB48159"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/DownloadLambda/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "zipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
                        },
                        "handler": "index.download_sources",
                        "role": {
                          "Fn::GetAtt": [
                            "BeamTaxiConsumerBuildPipelineDownloadLambdaServiceRoleDDB48159",
                            "Arn"
                          ]
                        },
                        "runtime": "python3.7",
                        "environment": {
                          "variables": {
                            "url": "https://github.com/aws-samples/amazon-kinesis-analytics-beam-taxi-consumer/archive/master.zip",
                            "bucket": {
                              "Ref": "Bucket83908E77"
                            },
                            "key": "sources/amazon-kinesis-analytics-beam-taxi-consumer-master.zip"
                          }
                        },
                        "timeout": 30
                      }
                    }
                  }
                }
              },
              "DownloadLambdaResource": {
                "id": "DownloadLambdaResource",
                "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/DownloadLambdaResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/DownloadLambdaResource/Default"
                  }
                }
              },
              "CodebuildProject": {
                "id": "CodebuildProject",
                "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodebuildProject",
                "children": {
                  "Role": {
                    "id": "Role",
                    "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodebuildProject/Role",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodebuildProject/Role/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "codebuild.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodebuildProject/Role/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodebuildProject/Role/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":logs:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":log-group:/aws/codebuild/",
                                              {
                                                "Ref": "BeamTaxiConsumerBuildPipelineCodebuildProjectE94068B3"
                                              }
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":logs:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":log-group:/aws/codebuild/",
                                              {
                                                "Ref": "BeamTaxiConsumerBuildPipelineCodebuildProjectE94068B3"
                                              },
                                              ":*"
                                            ]
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": [
                                        "codebuild:CreateReportGroup",
                                        "codebuild:CreateReport",
                                        "codebuild:UpdateReport",
                                        "codebuild:BatchPutTestCases",
                                        "codebuild:BatchPutCodeCoverages"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":codebuild:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":report-group/",
                                            {
                                              "Ref": "BeamTaxiConsumerBuildPipelineCodebuildProjectE94068B3"
                                            },
                                            "-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": [
                                        "s3:GetObject*",
                                        "s3:GetBucket*",
                                        "s3:List*",
                                        "s3:DeleteObject*",
                                        "s3:PutObject*",
                                        "s3:Abort*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "Bucket83908E77",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": [
                                                  "Bucket83908E77",
                                                  "Arn"
                                                ]
                                              },
                                              "/*"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "BeamTaxiConsumerBuildPipelineCodebuildProjectRoleDefaultPolicy394A0A12",
                                "roles": [
                                  {
                                    "Ref": "BeamTaxiConsumerBuildPipelineCodebuildProjectRole8A633BC6"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodebuildProject/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                      "aws:cdk:cloudformation:props": {
                        "artifacts": {
                          "type": "CODEPIPELINE"
                        },
                        "environment": {
                          "type": "LINUX_CONTAINER",
                          "image": "aws/codebuild/java:openjdk-11",
                          "imagePullCredentialsType": "CODEBUILD",
                          "privilegedMode": false,
                          "computeType": "BUILD_GENERAL1_SMALL"
                        },
                        "serviceRole": {
                          "Fn::GetAtt": [
                            "BeamTaxiConsumerBuildPipelineCodebuildProjectRole8A633BC6",
                            "Arn"
                          ]
                        },
                        "source": {
                          "type": "CODEPIPELINE",
                          "buildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"build\": {\n      \"commands\": [\n        \"cd amazon-kinesis-analytics-beam-taxi-consumer-master\",\n        \"mvn clean package -B\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"files\": [\n      \"target/amazon-kinesis-analytics-beam-taxi-consumer-*.jar\"\n    ],\n    \"discard-paths\": false,\n    \"base-directory\": \"amazon-kinesis-analytics-beam-taxi-consumer-master\"\n  }\n}"
                        },
                        "encryptionKey": "alias/aws/s3"
                      }
                    }
                  }
                }
              },
              "WaitHandle": {
                "id": "WaitHandle",
                "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/WaitHandle",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFormation::WaitConditionHandle",
                  "aws:cdk:cloudformation:props": {}
                }
              },
              "WaitCondition": {
                "id": "WaitCondition",
                "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/WaitCondition",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFormation::WaitCondition",
                  "aws:cdk:cloudformation:props": {
                    "count": 1,
                    "handle": {
                      "Ref": "BeamTaxiConsumerBuildPipelineWaitHandle410EECC2"
                    },
                    "timeout": "1200"
                  }
                }
              },
              "NotifyLambda": {
                "id": "NotifyLambda",
                "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/NotifyLambda",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/NotifyLambda/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/NotifyLambda/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/NotifyLambda/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/NotifyLambda/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "codepipeline:PutJobSuccessResult",
                                        "codepipeline:PutJobFailureResult"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "BeamTaxiConsumerBuildPipelineNotifyLambdaServiceRoleDefaultPolicy3E045A13",
                                "roles": [
                                  {
                                    "Ref": "BeamTaxiConsumerBuildPipelineNotifyLambdaServiceRole94083393"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/NotifyLambda/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "zipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
                        },
                        "handler": "index.notify_build_success",
                        "role": {
                          "Fn::GetAtt": [
                            "BeamTaxiConsumerBuildPipelineNotifyLambdaServiceRole94083393",
                            "Arn"
                          ]
                        },
                        "runtime": "python3.7",
                        "environment": {
                          "variables": {
                            "waitHandleUrl": {
                              "Ref": "BeamTaxiConsumerBuildPipelineWaitHandle410EECC2"
                            }
                          }
                        },
                        "timeout": 10
                      }
                    }
                  }
                }
              },
              "CodePipeline": {
                "id": "CodePipeline",
                "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline",
                "children": {
                  "Role": {
                    "id": "Role",
                    "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Role",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Role/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "codepipeline.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Role/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Role/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "s3:GetObject*",
                                        "s3:GetBucket*",
                                        "s3:List*",
                                        "s3:DeleteObject*",
                                        "s3:PutObject*",
                                        "s3:Abort*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "Bucket83908E77",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": [
                                                  "Bucket83908E77",
                                                  "Arn"
                                                ]
                                              },
                                              "/*"
                                            ]
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "BeamTaxiConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole107A6A77",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "BeamTaxiConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole8A9C2DB3",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "BeamTaxiConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole08009C82",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "BeamTaxiConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleABC84458",
                                          "Arn"
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "BeamTaxiConsumerBuildPipelineCodePipelineRoleDefaultPolicy745C1C6E",
                                "roles": [
                                  {
                                    "Ref": "BeamTaxiConsumerBuildPipelineCodePipelineRoleA2A59BB5"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CodePipeline::Pipeline",
                      "aws:cdk:cloudformation:props": {
                        "roleArn": {
                          "Fn::GetAtt": [
                            "BeamTaxiConsumerBuildPipelineCodePipelineRoleA2A59BB5",
                            "Arn"
                          ]
                        },
                        "stages": [
                          {
                            "name": "Source",
                            "actions": [
                              {
                                "name": "SourceAction",
                                "outputArtifacts": [
                                  {
                                    "name": "Artifact_Source_SourceAction"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Source",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "S3"
                                },
                                "configuration": {
                                  "S3Bucket": {
                                    "Ref": "Bucket83908E77"
                                  },
                                  "S3ObjectKey": "sources/amazon-kinesis-analytics-beam-taxi-consumer-master.zip"
                                },
                                "runOrder": 1,
                                "roleArn": {
                                  "Fn::GetAtt": [
                                    "BeamTaxiConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole107A6A77",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "name": "Build",
                            "actions": [
                              {
                                "name": "BuildAction",
                                "inputArtifacts": [
                                  {
                                    "name": "Artifact_Source_SourceAction"
                                  }
                                ],
                                "outputArtifacts": [
                                  {
                                    "name": "Artifact_Build_BuildAction"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Build",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "CodeBuild"
                                },
                                "configuration": {
                                  "ProjectName": {
                                    "Ref": "BeamTaxiConsumerBuildPipelineCodebuildProjectE94068B3"
                                  }
                                },
                                "runOrder": 1,
                                "roleArn": {
                                  "Fn::GetAtt": [
                                    "BeamTaxiConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole8A9C2DB3",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "name": "Copy",
                            "actions": [
                              {
                                "name": "CopyAction",
                                "inputArtifacts": [
                                  {
                                    "name": "Artifact_Build_BuildAction"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Deploy",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "S3"
                                },
                                "configuration": {
                                  "BucketName": {
                                    "Ref": "Bucket83908E77"
                                  },
                                  "Extract": "true"
                                },
                                "runOrder": 1,
                                "roleArn": {
                                  "Fn::GetAtt": [
                                    "BeamTaxiConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole08009C82",
                                    "Arn"
                                  ]
                                }
                              },
                              {
                                "name": "InvokeAction",
                                "actionTypeId": {
                                  "category": "Invoke",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "Lambda"
                                },
                                "configuration": {
                                  "FunctionName": {
                                    "Ref": "BeamTaxiConsumerBuildPipelineNotifyLambdaEB7E94E5"
                                  }
                                },
                                "runOrder": 2,
                                "roleArn": {
                                  "Fn::GetAtt": [
                                    "BeamTaxiConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleABC84458",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "artifactStore": {
                          "type": "S3",
                          "location": {
                            "Ref": "Bucket83908E77"
                          }
                        }
                      }
                    }
                  },
                  "Source": {
                    "id": "Source",
                    "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Source",
                    "children": {
                      "SourceAction": {
                        "id": "SourceAction",
                        "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Source/SourceAction",
                        "children": {
                          "CodePipelineActionRole": {
                            "id": "CodePipelineActionRole",
                            "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "AWS": {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":iam::",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":root"
                                                ]
                                              ]
                                            }
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    }
                                  }
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "s3:GetObject*",
                                                "s3:GetBucket*",
                                                "s3:List*"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": [
                                                {
                                                  "Fn::GetAtt": [
                                                    "Bucket83908E77",
                                                    "Arn"
                                                  ]
                                                },
                                                {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      {
                                                        "Fn::GetAtt": [
                                                          "Bucket83908E77",
                                                          "Arn"
                                                        ]
                                                      },
                                                      "/*"
                                                    ]
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "Action": [
                                                "s3:DeleteObject*",
                                                "s3:PutObject*",
                                                "s3:Abort*"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": [
                                                {
                                                  "Fn::GetAtt": [
                                                    "Bucket83908E77",
                                                    "Arn"
                                                  ]
                                                },
                                                {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      {
                                                        "Fn::GetAtt": [
                                                          "Bucket83908E77",
                                                          "Arn"
                                                        ]
                                                      },
                                                      "/*"
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "BeamTaxiConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleDefaultPolicy16133A47",
                                        "roles": [
                                          {
                                            "Ref": "BeamTaxiConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole107A6A77"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Build": {
                    "id": "Build",
                    "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Build",
                    "children": {
                      "BuildAction": {
                        "id": "BuildAction",
                        "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Build/BuildAction",
                        "children": {
                          "CodePipelineActionRole": {
                            "id": "CodePipelineActionRole",
                            "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "AWS": {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":iam::",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":root"
                                                ]
                                              ]
                                            }
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    }
                                  }
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "codebuild:BatchGetBuilds",
                                                "codebuild:StartBuild",
                                                "codebuild:StopBuild"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::GetAtt": [
                                                  "BeamTaxiConsumerBuildPipelineCodebuildProjectE94068B3",
                                                  "Arn"
                                                ]
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "BeamTaxiConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRoleDefaultPolicyB6FE722C",
                                        "roles": [
                                          {
                                            "Ref": "BeamTaxiConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole8A9C2DB3"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Copy": {
                    "id": "Copy",
                    "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy",
                    "children": {
                      "CopyAction": {
                        "id": "CopyAction",
                        "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/CopyAction",
                        "children": {
                          "CodePipelineActionRole": {
                            "id": "CodePipelineActionRole",
                            "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "AWS": {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":iam::",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":root"
                                                ]
                                              ]
                                            }
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    }
                                  }
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "s3:DeleteObject*",
                                                "s3:PutObject*",
                                                "s3:Abort*"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": [
                                                {
                                                  "Fn::GetAtt": [
                                                    "Bucket83908E77",
                                                    "Arn"
                                                  ]
                                                },
                                                {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      {
                                                        "Fn::GetAtt": [
                                                          "Bucket83908E77",
                                                          "Arn"
                                                        ]
                                                      },
                                                      "/*"
                                                    ]
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "Action": [
                                                "s3:GetObject*",
                                                "s3:GetBucket*",
                                                "s3:List*"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": [
                                                {
                                                  "Fn::GetAtt": [
                                                    "Bucket83908E77",
                                                    "Arn"
                                                  ]
                                                },
                                                {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      {
                                                        "Fn::GetAtt": [
                                                          "Bucket83908E77",
                                                          "Arn"
                                                        ]
                                                      },
                                                      "/*"
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "BeamTaxiConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleDefaultPolicy46A4F07B",
                                        "roles": [
                                          {
                                            "Ref": "BeamTaxiConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole08009C82"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "InvokeAction": {
                        "id": "InvokeAction",
                        "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/InvokeAction",
                        "children": {
                          "CodePipelineActionRole": {
                            "id": "CodePipelineActionRole",
                            "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "AWS": {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":iam::",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":root"
                                                ]
                                              ]
                                            }
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    }
                                  }
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:ListFunctions",
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            },
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::GetAtt": [
                                                  "BeamTaxiConsumerBuildPipelineNotifyLambdaEB7E94E5",
                                                  "Arn"
                                                ]
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "BeamTaxiConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleDefaultPolicyF8FF4A4E",
                                        "roles": [
                                          {
                                            "Ref": "BeamTaxiConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleABC84458"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "AmazonKinesisAnalyticsBeamTaxiConsumerCopyCommand": {
                "id": "AmazonKinesisAnalyticsBeamTaxiConsumerCopyCommand",
                "path": "BeamTaxiCount-Build/BeamTaxiConsumerBuildPipeline/AmazonKinesisAnalyticsBeamTaxiConsumerCopyCommand"
              }
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "BeamTaxiCount-Build/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "BeamTaxiCount-Build/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "BeamTaxiCount-Build/CDKMetadata/Condition"
              }
            }
          }
        }
      },
      "BeamTaxiCount-Demo": {
        "id": "BeamTaxiCount-Demo",
        "path": "BeamTaxiCount-Demo",
        "children": {
          "Bucket": {
            "id": "Bucket",
            "path": "BeamTaxiCount-Demo/Bucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "BeamTaxiCount-Demo/Bucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "versioningConfiguration": {
                      "status": "Enabled"
                    }
                  }
                }
              },
              "Notifications": {
                "id": "Notifications",
                "path": "BeamTaxiCount-Demo/Bucket/Notifications"
              }
            }
          },
          "EmptyBucket": {
            "id": "EmptyBucket",
            "path": "BeamTaxiCount-Demo/EmptyBucket",
            "children": {
              "EmptyBucketLambda": {
                "id": "EmptyBucketLambda",
                "path": "BeamTaxiCount-Demo/EmptyBucket/EmptyBucketLambda",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "BeamTaxiCount-Demo/EmptyBucket/EmptyBucketLambda/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Demo/EmptyBucket/EmptyBucketLambda/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "BeamTaxiCount-Demo/EmptyBucket/EmptyBucketLambda/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Demo/EmptyBucket/EmptyBucketLambda/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "s3:GetObject*",
                                        "s3:GetBucket*",
                                        "s3:List*",
                                        "s3:DeleteObject*",
                                        "s3:PutObject*",
                                        "s3:Abort*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "Bucket83908E77",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": [
                                                  "Bucket83908E77",
                                                  "Arn"
                                                ]
                                              },
                                              "/*"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "EmptyBucketEmptyBucketLambdaServiceRoleDefaultPolicy0872AADF",
                                "roles": [
                                  {
                                    "Ref": "EmptyBucketEmptyBucketLambdaServiceRole67452BDD"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Demo/EmptyBucket/EmptyBucketLambda/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "zipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\n\ndef empty_bucket(event, context):\n    bucket_name = os.environ['bucket_name']\n\n    try:\n        if event['RequestType'] == 'Delete':\n            print(\"empty bucket: \" + bucket_name)\n            \n            bucket = boto3.resource('s3').Bucket(bucket_name)\n            bucket.object_versions.delete()\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})"
                        },
                        "handler": "index.empty_bucket",
                        "role": {
                          "Fn::GetAtt": [
                            "EmptyBucketEmptyBucketLambdaServiceRole67452BDD",
                            "Arn"
                          ]
                        },
                        "runtime": "python3.7",
                        "environment": {
                          "variables": {
                            "bucket_name": {
                              "Ref": "Bucket83908E77"
                            }
                          }
                        },
                        "memorySize": 512,
                        "timeout": 900
                      }
                    }
                  }
                }
              },
              "EmptyBucketResource": {
                "id": "EmptyBucketResource",
                "path": "BeamTaxiCount-Demo/EmptyBucket/EmptyBucketResource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFormation::CustomResource",
                  "aws:cdk:cloudformation:props": {
                    "serviceToken": {
                      "Fn::GetAtt": [
                        "EmptyBucketEmptyBucketLambdaD0E9E93D",
                        "Arn"
                      ]
                    }
                  }
                }
              }
            }
          },
          "S3Bucket": {
            "id": "S3Bucket",
            "path": "BeamTaxiCount-Demo/S3Bucket"
          },
          "BeamTaxiConsumerBuildPipeline": {
            "id": "BeamTaxiConsumerBuildPipeline",
            "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline",
            "children": {
              "DownloadLambda": {
                "id": "DownloadLambda",
                "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/DownloadLambda",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/DownloadLambda/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/DownloadLambda/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/DownloadLambda/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/DownloadLambda/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "s3:PutObject*",
                                        "s3:Abort*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            {
                                              "Fn::GetAtt": [
                                                "Bucket83908E77",
                                                "Arn"
                                              ]
                                            },
                                            "/*"
                                          ]
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "BeamTaxiConsumerBuildPipelineDownloadLambdaServiceRoleDefaultPolicy841A2736",
                                "roles": [
                                  {
                                    "Ref": "BeamTaxiConsumerBuildPipelineDownloadLambdaServiceRoleDDB48159"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/DownloadLambda/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "zipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
                        },
                        "handler": "index.download_sources",
                        "role": {
                          "Fn::GetAtt": [
                            "BeamTaxiConsumerBuildPipelineDownloadLambdaServiceRoleDDB48159",
                            "Arn"
                          ]
                        },
                        "runtime": "python3.7",
                        "environment": {
                          "variables": {
                            "url": "https://github.com/aws-samples/amazon-kinesis-analytics-beam-taxi-consumer/archive/master.zip",
                            "bucket": {
                              "Ref": "Bucket83908E77"
                            },
                            "key": "sources/amazon-kinesis-analytics-beam-taxi-consumer-master.zip"
                          }
                        },
                        "timeout": 30
                      }
                    }
                  }
                }
              },
              "DownloadLambdaResource": {
                "id": "DownloadLambdaResource",
                "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/DownloadLambdaResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/DownloadLambdaResource/Default"
                  }
                }
              },
              "CodebuildProject": {
                "id": "CodebuildProject",
                "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodebuildProject",
                "children": {
                  "Role": {
                    "id": "Role",
                    "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodebuildProject/Role",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodebuildProject/Role/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "codebuild.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodebuildProject/Role/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodebuildProject/Role/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":logs:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":log-group:/aws/codebuild/",
                                              {
                                                "Ref": "BeamTaxiConsumerBuildPipelineCodebuildProjectE94068B3"
                                              }
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":logs:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":log-group:/aws/codebuild/",
                                              {
                                                "Ref": "BeamTaxiConsumerBuildPipelineCodebuildProjectE94068B3"
                                              },
                                              ":*"
                                            ]
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": [
                                        "codebuild:CreateReportGroup",
                                        "codebuild:CreateReport",
                                        "codebuild:UpdateReport",
                                        "codebuild:BatchPutTestCases",
                                        "codebuild:BatchPutCodeCoverages"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":codebuild:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":report-group/",
                                            {
                                              "Ref": "BeamTaxiConsumerBuildPipelineCodebuildProjectE94068B3"
                                            },
                                            "-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": [
                                        "s3:GetObject*",
                                        "s3:GetBucket*",
                                        "s3:List*",
                                        "s3:DeleteObject*",
                                        "s3:PutObject*",
                                        "s3:Abort*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "Bucket83908E77",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": [
                                                  "Bucket83908E77",
                                                  "Arn"
                                                ]
                                              },
                                              "/*"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "BeamTaxiConsumerBuildPipelineCodebuildProjectRoleDefaultPolicy394A0A12",
                                "roles": [
                                  {
                                    "Ref": "BeamTaxiConsumerBuildPipelineCodebuildProjectRole8A633BC6"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodebuildProject/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                      "aws:cdk:cloudformation:props": {
                        "artifacts": {
                          "type": "CODEPIPELINE"
                        },
                        "environment": {
                          "type": "LINUX_CONTAINER",
                          "image": "aws/codebuild/java:openjdk-11",
                          "imagePullCredentialsType": "CODEBUILD",
                          "privilegedMode": false,
                          "computeType": "BUILD_GENERAL1_SMALL"
                        },
                        "serviceRole": {
                          "Fn::GetAtt": [
                            "BeamTaxiConsumerBuildPipelineCodebuildProjectRole8A633BC6",
                            "Arn"
                          ]
                        },
                        "source": {
                          "type": "CODEPIPELINE",
                          "buildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"build\": {\n      \"commands\": [\n        \"cd amazon-kinesis-analytics-beam-taxi-consumer-master\",\n        \"mvn clean package -B\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"files\": [\n      \"target/amazon-kinesis-analytics-beam-taxi-consumer-*.jar\"\n    ],\n    \"discard-paths\": false,\n    \"base-directory\": \"amazon-kinesis-analytics-beam-taxi-consumer-master\"\n  }\n}"
                        },
                        "encryptionKey": "alias/aws/s3"
                      }
                    }
                  }
                }
              },
              "WaitHandle": {
                "id": "WaitHandle",
                "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/WaitHandle",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFormation::WaitConditionHandle",
                  "aws:cdk:cloudformation:props": {}
                }
              },
              "WaitCondition": {
                "id": "WaitCondition",
                "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/WaitCondition",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFormation::WaitCondition",
                  "aws:cdk:cloudformation:props": {
                    "count": 1,
                    "handle": {
                      "Ref": "BeamTaxiConsumerBuildPipelineWaitHandle410EECC2"
                    },
                    "timeout": "1200"
                  }
                }
              },
              "NotifyLambda": {
                "id": "NotifyLambda",
                "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/NotifyLambda",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/NotifyLambda/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/NotifyLambda/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/NotifyLambda/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/NotifyLambda/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "codepipeline:PutJobSuccessResult",
                                        "codepipeline:PutJobFailureResult"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "BeamTaxiConsumerBuildPipelineNotifyLambdaServiceRoleDefaultPolicy3E045A13",
                                "roles": [
                                  {
                                    "Ref": "BeamTaxiConsumerBuildPipelineNotifyLambdaServiceRole94083393"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/NotifyLambda/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "zipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
                        },
                        "handler": "index.notify_build_success",
                        "role": {
                          "Fn::GetAtt": [
                            "BeamTaxiConsumerBuildPipelineNotifyLambdaServiceRole94083393",
                            "Arn"
                          ]
                        },
                        "runtime": "python3.7",
                        "environment": {
                          "variables": {
                            "waitHandleUrl": {
                              "Ref": "BeamTaxiConsumerBuildPipelineWaitHandle410EECC2"
                            }
                          }
                        },
                        "timeout": 10
                      }
                    }
                  }
                }
              },
              "CodePipeline": {
                "id": "CodePipeline",
                "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline",
                "children": {
                  "Role": {
                    "id": "Role",
                    "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Role",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Role/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "codepipeline.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Role/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Role/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "s3:GetObject*",
                                        "s3:GetBucket*",
                                        "s3:List*",
                                        "s3:DeleteObject*",
                                        "s3:PutObject*",
                                        "s3:Abort*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "Bucket83908E77",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": [
                                                  "Bucket83908E77",
                                                  "Arn"
                                                ]
                                              },
                                              "/*"
                                            ]
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "BeamTaxiConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole107A6A77",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "BeamTaxiConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole8A9C2DB3",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "BeamTaxiConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole08009C82",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "BeamTaxiConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleABC84458",
                                          "Arn"
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "BeamTaxiConsumerBuildPipelineCodePipelineRoleDefaultPolicy745C1C6E",
                                "roles": [
                                  {
                                    "Ref": "BeamTaxiConsumerBuildPipelineCodePipelineRoleA2A59BB5"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CodePipeline::Pipeline",
                      "aws:cdk:cloudformation:props": {
                        "roleArn": {
                          "Fn::GetAtt": [
                            "BeamTaxiConsumerBuildPipelineCodePipelineRoleA2A59BB5",
                            "Arn"
                          ]
                        },
                        "stages": [
                          {
                            "name": "Source",
                            "actions": [
                              {
                                "name": "SourceAction",
                                "outputArtifacts": [
                                  {
                                    "name": "Artifact_Source_SourceAction"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Source",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "S3"
                                },
                                "configuration": {
                                  "S3Bucket": {
                                    "Ref": "Bucket83908E77"
                                  },
                                  "S3ObjectKey": "sources/amazon-kinesis-analytics-beam-taxi-consumer-master.zip"
                                },
                                "runOrder": 1,
                                "roleArn": {
                                  "Fn::GetAtt": [
                                    "BeamTaxiConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole107A6A77",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "name": "Build",
                            "actions": [
                              {
                                "name": "BuildAction",
                                "inputArtifacts": [
                                  {
                                    "name": "Artifact_Source_SourceAction"
                                  }
                                ],
                                "outputArtifacts": [
                                  {
                                    "name": "Artifact_Build_BuildAction"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Build",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "CodeBuild"
                                },
                                "configuration": {
                                  "ProjectName": {
                                    "Ref": "BeamTaxiConsumerBuildPipelineCodebuildProjectE94068B3"
                                  }
                                },
                                "runOrder": 1,
                                "roleArn": {
                                  "Fn::GetAtt": [
                                    "BeamTaxiConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole8A9C2DB3",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "name": "Copy",
                            "actions": [
                              {
                                "name": "CopyAction",
                                "inputArtifacts": [
                                  {
                                    "name": "Artifact_Build_BuildAction"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Deploy",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "S3"
                                },
                                "configuration": {
                                  "BucketName": {
                                    "Ref": "Bucket83908E77"
                                  },
                                  "Extract": "true"
                                },
                                "runOrder": 1,
                                "roleArn": {
                                  "Fn::GetAtt": [
                                    "BeamTaxiConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole08009C82",
                                    "Arn"
                                  ]
                                }
                              },
                              {
                                "name": "InvokeAction",
                                "actionTypeId": {
                                  "category": "Invoke",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "Lambda"
                                },
                                "configuration": {
                                  "FunctionName": {
                                    "Ref": "BeamTaxiConsumerBuildPipelineNotifyLambdaEB7E94E5"
                                  }
                                },
                                "runOrder": 2,
                                "roleArn": {
                                  "Fn::GetAtt": [
                                    "BeamTaxiConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleABC84458",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "artifactStore": {
                          "type": "S3",
                          "location": {
                            "Ref": "Bucket83908E77"
                          }
                        }
                      }
                    }
                  },
                  "Source": {
                    "id": "Source",
                    "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Source",
                    "children": {
                      "SourceAction": {
                        "id": "SourceAction",
                        "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Source/SourceAction",
                        "children": {
                          "CodePipelineActionRole": {
                            "id": "CodePipelineActionRole",
                            "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "AWS": {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":iam::",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":root"
                                                ]
                                              ]
                                            }
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    }
                                  }
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "s3:GetObject*",
                                                "s3:GetBucket*",
                                                "s3:List*"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": [
                                                {
                                                  "Fn::GetAtt": [
                                                    "Bucket83908E77",
                                                    "Arn"
                                                  ]
                                                },
                                                {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      {
                                                        "Fn::GetAtt": [
                                                          "Bucket83908E77",
                                                          "Arn"
                                                        ]
                                                      },
                                                      "/*"
                                                    ]
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "Action": [
                                                "s3:DeleteObject*",
                                                "s3:PutObject*",
                                                "s3:Abort*"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": [
                                                {
                                                  "Fn::GetAtt": [
                                                    "Bucket83908E77",
                                                    "Arn"
                                                  ]
                                                },
                                                {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      {
                                                        "Fn::GetAtt": [
                                                          "Bucket83908E77",
                                                          "Arn"
                                                        ]
                                                      },
                                                      "/*"
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "BeamTaxiConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleDefaultPolicy16133A47",
                                        "roles": [
                                          {
                                            "Ref": "BeamTaxiConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole107A6A77"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Build": {
                    "id": "Build",
                    "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Build",
                    "children": {
                      "BuildAction": {
                        "id": "BuildAction",
                        "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Build/BuildAction",
                        "children": {
                          "CodePipelineActionRole": {
                            "id": "CodePipelineActionRole",
                            "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "AWS": {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":iam::",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":root"
                                                ]
                                              ]
                                            }
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    }
                                  }
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "codebuild:BatchGetBuilds",
                                                "codebuild:StartBuild",
                                                "codebuild:StopBuild"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::GetAtt": [
                                                  "BeamTaxiConsumerBuildPipelineCodebuildProjectE94068B3",
                                                  "Arn"
                                                ]
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "BeamTaxiConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRoleDefaultPolicyB6FE722C",
                                        "roles": [
                                          {
                                            "Ref": "BeamTaxiConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole8A9C2DB3"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Copy": {
                    "id": "Copy",
                    "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy",
                    "children": {
                      "CopyAction": {
                        "id": "CopyAction",
                        "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/CopyAction",
                        "children": {
                          "CodePipelineActionRole": {
                            "id": "CodePipelineActionRole",
                            "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "AWS": {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":iam::",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":root"
                                                ]
                                              ]
                                            }
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    }
                                  }
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "s3:DeleteObject*",
                                                "s3:PutObject*",
                                                "s3:Abort*"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": [
                                                {
                                                  "Fn::GetAtt": [
                                                    "Bucket83908E77",
                                                    "Arn"
                                                  ]
                                                },
                                                {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      {
                                                        "Fn::GetAtt": [
                                                          "Bucket83908E77",
                                                          "Arn"
                                                        ]
                                                      },
                                                      "/*"
                                                    ]
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "Action": [
                                                "s3:GetObject*",
                                                "s3:GetBucket*",
                                                "s3:List*"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": [
                                                {
                                                  "Fn::GetAtt": [
                                                    "Bucket83908E77",
                                                    "Arn"
                                                  ]
                                                },
                                                {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      {
                                                        "Fn::GetAtt": [
                                                          "Bucket83908E77",
                                                          "Arn"
                                                        ]
                                                      },
                                                      "/*"
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "BeamTaxiConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleDefaultPolicy46A4F07B",
                                        "roles": [
                                          {
                                            "Ref": "BeamTaxiConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole08009C82"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "InvokeAction": {
                        "id": "InvokeAction",
                        "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/InvokeAction",
                        "children": {
                          "CodePipelineActionRole": {
                            "id": "CodePipelineActionRole",
                            "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "AWS": {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":iam::",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":root"
                                                ]
                                              ]
                                            }
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    }
                                  }
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:ListFunctions",
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            },
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::GetAtt": [
                                                  "BeamTaxiConsumerBuildPipelineNotifyLambdaEB7E94E5",
                                                  "Arn"
                                                ]
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "BeamTaxiConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleDefaultPolicyF8FF4A4E",
                                        "roles": [
                                          {
                                            "Ref": "BeamTaxiConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleABC84458"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "AmazonKinesisAnalyticsBeamTaxiConsumerCopyCommand": {
                "id": "AmazonKinesisAnalyticsBeamTaxiConsumerCopyCommand",
                "path": "BeamTaxiCount-Demo/BeamTaxiConsumerBuildPipeline/AmazonKinesisAnalyticsBeamTaxiConsumerCopyCommand"
              }
            }
          },
          "KeyName": {
            "id": "KeyName",
            "path": "BeamTaxiCount-Demo/KeyName"
          },
          "VPC": {
            "id": "VPC",
            "path": "BeamTaxiCount-Demo/VPC",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "BeamTaxiCount-Demo/VPC/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "BeamTaxiCount-Demo/VPC"
                      }
                    ]
                  }
                }
              },
              "publicSubnet1": {
                "id": "publicSubnet1",
                "path": "BeamTaxiCount-Demo/VPC/publicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "BeamTaxiCount-Demo/VPC/publicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/24",
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "BeamTaxiCount-Demo/VPC/publicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "BeamTaxiCount-Demo/VPC/publicSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "BeamTaxiCount-Demo/VPC/publicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "BeamTaxiCount-Demo/VPC/publicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "BeamTaxiCount-Demo/VPC/publicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCpublicSubnet1RouteTableF591E248"
                        },
                        "subnetId": {
                          "Ref": "VPCpublicSubnet1Subnet325F50B2"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "BeamTaxiCount-Demo/VPC/publicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCpublicSubnet1RouteTableF591E248"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VPCIGWB7E252D3"
                        }
                      }
                    }
                  }
                }
              },
              "publicSubnet2": {
                "id": "publicSubnet2",
                "path": "BeamTaxiCount-Demo/VPC/publicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "BeamTaxiCount-Demo/VPC/publicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.1.0/24",
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "BeamTaxiCount-Demo/VPC/publicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "BeamTaxiCount-Demo/VPC/publicSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "BeamTaxiCount-Demo/VPC/publicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "BeamTaxiCount-Demo/VPC/publicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "BeamTaxiCount-Demo/VPC/publicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCpublicSubnet2RouteTable55DAB1BB"
                        },
                        "subnetId": {
                          "Ref": "VPCpublicSubnet2Subnet2B2DFF71"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "BeamTaxiCount-Demo/VPC/publicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCpublicSubnet2RouteTable55DAB1BB"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VPCIGWB7E252D3"
                        }
                      }
                    }
                  }
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "BeamTaxiCount-Demo/VPC/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "BeamTaxiCount-Demo/VPC"
                      }
                    ]
                  }
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "BeamTaxiCount-Demo/VPC/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "VPCB9E5F0B4"
                    },
                    "internetGatewayId": {
                      "Ref": "VPCIGWB7E252D3"
                    }
                  }
                }
              }
            }
          },
          "EnrichEventsLambda": {
            "id": "EnrichEventsLambda",
            "path": "BeamTaxiCount-Demo/EnrichEventsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "BeamTaxiCount-Demo/EnrichEventsLambda/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Demo/EnrichEventsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "BeamTaxiCount-Demo/EnrichEventsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "zipFile": "'use strict';\nconsole.log('Loading function');\n\nexports.handler = (event, context, callback) => {\n    /* Process the list of records and transform them */\n    const output = event.records.map((record) => ({\n        recordId: record.recordId,\n        result: 'Ok',\n        data: enrichPayload(record),\n    }));\n    \n    console.log(`Processing completed.  Successful records ${output.length}.`);\n    \n    callback(null, { records: output });\n};\n\n\nfunction enrichPayload(record) {\n    const payload = JSON.parse(Buffer.from(record.data, 'base64').toString('utf8'));\n    const timestamp = new Date(record.kinesisRecordMetadata.approximateArrivalTimestamp).toISOString();\n    \n    const enrichedPayload = Object.assign({approximate_arrival_timestamp: timestamp}, payload);\n\n    return Buffer.from(JSON.stringify(enrichedPayload)+\"\\n\").toString('base64');\n}"
                    },
                    "handler": "index.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "EnrichEventsLambdaServiceRoleD32248A6",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs12.x",
                    "timeout": 60
                  }
                }
              }
            }
          },
          "KinesisReplayInfrastructure": {
            "id": "KinesisReplayInfrastructure",
            "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure",
            "children": {
              "KinesisReplayBuildPipeline": {
                "id": "KinesisReplayBuildPipeline",
                "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline",
                "children": {
                  "DownloadLambda": {
                    "id": "DownloadLambda",
                    "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/DownloadLambda",
                    "children": {
                      "ServiceRole": {
                        "id": "ServiceRole",
                        "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/DownloadLambda/ServiceRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/DownloadLambda/ServiceRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "lambda.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "managedPolicyArns": [
                                  {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                      ]
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/DownloadLambda/ServiceRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/DownloadLambda/ServiceRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "s3:PutObject*",
                                            "s3:Abort*"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::Join": [
                                              "",
                                              [
                                                {
                                                  "Fn::GetAtt": [
                                                    "Bucket83908E77",
                                                    "Arn"
                                                  ]
                                                },
                                                "/*"
                                              ]
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineDownloadLambdaServiceRoleDefaultPolicy102A21E6",
                                    "roles": [
                                      {
                                        "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineDownloadLambdaServiceRole86B346C9"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/DownloadLambda/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                          "aws:cdk:cloudformation:props": {
                            "code": {
                              "zipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
                            },
                            "handler": "index.download_sources",
                            "role": {
                              "Fn::GetAtt": [
                                "KinesisReplayInfrastructureKinesisReplayBuildPipelineDownloadLambdaServiceRole86B346C9",
                                "Arn"
                              ]
                            },
                            "runtime": "python3.7",
                            "environment": {
                              "variables": {
                                "url": "https://github.com/aws-samples/amazon-kinesis-replay/archive/release-0.1.0.zip",
                                "bucket": {
                                  "Ref": "Bucket83908E77"
                                },
                                "key": "sources/amazon-kinesis-replay-release-0.1.0.zip"
                              }
                            },
                            "timeout": 30
                          }
                        }
                      }
                    }
                  },
                  "DownloadLambdaResource": {
                    "id": "DownloadLambdaResource",
                    "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/DownloadLambdaResource",
                    "children": {
                      "Default": {
                        "id": "Default",
                        "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/DownloadLambdaResource/Default"
                      }
                    }
                  },
                  "CodebuildProject": {
                    "id": "CodebuildProject",
                    "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodebuildProject",
                    "children": {
                      "Role": {
                        "id": "Role",
                        "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodebuildProject/Role",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodebuildProject/Role/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "codebuild.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodebuildProject/Role/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodebuildProject/Role/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "logs:CreateLogGroup",
                                            "logs:CreateLogStream",
                                            "logs:PutLogEvents"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":logs:",
                                                  {
                                                    "Ref": "AWS::Region"
                                                  },
                                                  ":",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":log-group:/aws/codebuild/",
                                                  {
                                                    "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProject8B60D31D"
                                                  }
                                                ]
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":logs:",
                                                  {
                                                    "Ref": "AWS::Region"
                                                  },
                                                  ":",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":log-group:/aws/codebuild/",
                                                  {
                                                    "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProject8B60D31D"
                                                  },
                                                  ":*"
                                                ]
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Action": [
                                            "codebuild:CreateReportGroup",
                                            "codebuild:CreateReport",
                                            "codebuild:UpdateReport",
                                            "codebuild:BatchPutTestCases",
                                            "codebuild:BatchPutCodeCoverages"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::Join": [
                                              "",
                                              [
                                                "arn:",
                                                {
                                                  "Ref": "AWS::Partition"
                                                },
                                                ":codebuild:",
                                                {
                                                  "Ref": "AWS::Region"
                                                },
                                                ":",
                                                {
                                                  "Ref": "AWS::AccountId"
                                                },
                                                ":report-group/",
                                                {
                                                  "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProject8B60D31D"
                                                },
                                                "-*"
                                              ]
                                            ]
                                          }
                                        },
                                        {
                                          "Action": [
                                            "s3:GetObject*",
                                            "s3:GetBucket*",
                                            "s3:List*",
                                            "s3:DeleteObject*",
                                            "s3:PutObject*",
                                            "s3:Abort*"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::GetAtt": [
                                                "Bucket83908E77",
                                                "Arn"
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  {
                                                    "Fn::GetAtt": [
                                                      "Bucket83908E77",
                                                      "Arn"
                                                    ]
                                                  },
                                                  "/*"
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProjectRoleDefaultPolicyAC53B5B1",
                                    "roles": [
                                      {
                                        "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProjectRole3C10904F"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodebuildProject/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                          "aws:cdk:cloudformation:props": {
                            "artifacts": {
                              "type": "CODEPIPELINE"
                            },
                            "environment": {
                              "type": "LINUX_CONTAINER",
                              "image": "aws/codebuild/java:openjdk-11",
                              "imagePullCredentialsType": "CODEBUILD",
                              "privilegedMode": false,
                              "computeType": "BUILD_GENERAL1_SMALL"
                            },
                            "serviceRole": {
                              "Fn::GetAtt": [
                                "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProjectRole3C10904F",
                                "Arn"
                              ]
                            },
                            "source": {
                              "type": "CODEPIPELINE",
                              "buildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"build\": {\n      \"commands\": [\n        \"cd amazon-kinesis-replay-release-0.1.0\",\n        \"mvn clean package -B\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"files\": [\n      \"target/amazon-kinesis-replay-*.jar\"\n    ],\n    \"discard-paths\": false,\n    \"base-directory\": \"amazon-kinesis-replay-release-0.1.0\"\n  }\n}"
                            },
                            "encryptionKey": "alias/aws/s3"
                          }
                        }
                      }
                    }
                  },
                  "WaitHandle": {
                    "id": "WaitHandle",
                    "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/WaitHandle",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CloudFormation::WaitConditionHandle",
                      "aws:cdk:cloudformation:props": {}
                    }
                  },
                  "WaitCondition": {
                    "id": "WaitCondition",
                    "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/WaitCondition",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CloudFormation::WaitCondition",
                      "aws:cdk:cloudformation:props": {
                        "count": 1,
                        "handle": {
                          "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineWaitHandle3C26CE2C"
                        },
                        "timeout": "1200"
                      }
                    }
                  },
                  "NotifyLambda": {
                    "id": "NotifyLambda",
                    "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/NotifyLambda",
                    "children": {
                      "ServiceRole": {
                        "id": "ServiceRole",
                        "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/NotifyLambda/ServiceRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/NotifyLambda/ServiceRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "lambda.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "managedPolicyArns": [
                                  {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                      ]
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/NotifyLambda/ServiceRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/NotifyLambda/ServiceRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "codepipeline:PutJobSuccessResult",
                                            "codepipeline:PutJobFailureResult"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*"
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineNotifyLambdaServiceRoleDefaultPolicyFE5622CC",
                                    "roles": [
                                      {
                                        "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineNotifyLambdaServiceRole1532D198"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/NotifyLambda/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                          "aws:cdk:cloudformation:props": {
                            "code": {
                              "zipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
                            },
                            "handler": "index.notify_build_success",
                            "role": {
                              "Fn::GetAtt": [
                                "KinesisReplayInfrastructureKinesisReplayBuildPipelineNotifyLambdaServiceRole1532D198",
                                "Arn"
                              ]
                            },
                            "runtime": "python3.7",
                            "environment": {
                              "variables": {
                                "waitHandleUrl": {
                                  "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineWaitHandle3C26CE2C"
                                }
                              }
                            },
                            "timeout": 10
                          }
                        }
                      }
                    }
                  },
                  "CodePipeline": {
                    "id": "CodePipeline",
                    "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline",
                    "children": {
                      "Role": {
                        "id": "Role",
                        "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Role",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Role/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "codepipeline.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Role/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Role/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "s3:GetObject*",
                                            "s3:GetBucket*",
                                            "s3:List*",
                                            "s3:DeleteObject*",
                                            "s3:PutObject*",
                                            "s3:Abort*"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::GetAtt": [
                                                "Bucket83908E77",
                                                "Arn"
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  {
                                                    "Fn::GetAtt": [
                                                      "Bucket83908E77",
                                                      "Arn"
                                                    ]
                                                  },
                                                  "/*"
                                                ]
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole2D3A619B",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole5381CB1D",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole60F16D3A",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRole9DE755D2",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineRoleDefaultPolicyBE99C5D4",
                                    "roles": [
                                      {
                                        "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineRole8619A4EA"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CodePipeline::Pipeline",
                          "aws:cdk:cloudformation:props": {
                            "roleArn": {
                              "Fn::GetAtt": [
                                "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineRole8619A4EA",
                                "Arn"
                              ]
                            },
                            "stages": [
                              {
                                "name": "Source",
                                "actions": [
                                  {
                                    "name": "SourceAction",
                                    "outputArtifacts": [
                                      {
                                        "name": "Artifact_Source_SourceAction"
                                      }
                                    ],
                                    "actionTypeId": {
                                      "category": "Source",
                                      "version": "1",
                                      "owner": "AWS",
                                      "provider": "S3"
                                    },
                                    "configuration": {
                                      "S3Bucket": {
                                        "Ref": "Bucket83908E77"
                                      },
                                      "S3ObjectKey": "sources/amazon-kinesis-replay-release-0.1.0.zip"
                                    },
                                    "runOrder": 1,
                                    "roleArn": {
                                      "Fn::GetAtt": [
                                        "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole2D3A619B",
                                        "Arn"
                                      ]
                                    }
                                  }
                                ]
                              },
                              {
                                "name": "Build",
                                "actions": [
                                  {
                                    "name": "BuildAction",
                                    "inputArtifacts": [
                                      {
                                        "name": "Artifact_Source_SourceAction"
                                      }
                                    ],
                                    "outputArtifacts": [
                                      {
                                        "name": "Artifact_Build_BuildAction"
                                      }
                                    ],
                                    "actionTypeId": {
                                      "category": "Build",
                                      "version": "1",
                                      "owner": "AWS",
                                      "provider": "CodeBuild"
                                    },
                                    "configuration": {
                                      "ProjectName": {
                                        "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProject8B60D31D"
                                      }
                                    },
                                    "runOrder": 1,
                                    "roleArn": {
                                      "Fn::GetAtt": [
                                        "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole5381CB1D",
                                        "Arn"
                                      ]
                                    }
                                  }
                                ]
                              },
                              {
                                "name": "Copy",
                                "actions": [
                                  {
                                    "name": "CopyAction",
                                    "inputArtifacts": [
                                      {
                                        "name": "Artifact_Build_BuildAction"
                                      }
                                    ],
                                    "actionTypeId": {
                                      "category": "Deploy",
                                      "version": "1",
                                      "owner": "AWS",
                                      "provider": "S3"
                                    },
                                    "configuration": {
                                      "BucketName": {
                                        "Ref": "Bucket83908E77"
                                      },
                                      "Extract": "true"
                                    },
                                    "runOrder": 1,
                                    "roleArn": {
                                      "Fn::GetAtt": [
                                        "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole60F16D3A",
                                        "Arn"
                                      ]
                                    }
                                  },
                                  {
                                    "name": "InvokeAction",
                                    "actionTypeId": {
                                      "category": "Invoke",
                                      "version": "1",
                                      "owner": "AWS",
                                      "provider": "Lambda"
                                    },
                                    "configuration": {
                                      "FunctionName": {
                                        "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineNotifyLambda9D2FC2E0"
                                      }
                                    },
                                    "runOrder": 2,
                                    "roleArn": {
                                      "Fn::GetAtt": [
                                        "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRole9DE755D2",
                                        "Arn"
                                      ]
                                    }
                                  }
                                ]
                              }
                            ],
                            "artifactStore": {
                              "type": "S3",
                              "location": {
                                "Ref": "Bucket83908E77"
                              }
                            }
                          }
                        }
                      },
                      "Source": {
                        "id": "Source",
                        "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Source",
                        "children": {
                          "SourceAction": {
                            "id": "SourceAction",
                            "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Source/SourceAction",
                            "children": {
                              "CodePipelineActionRole": {
                                "id": "CodePipelineActionRole",
                                "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                      "aws:cdk:cloudformation:props": {
                                        "assumeRolePolicyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "AWS": {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      "arn:",
                                                      {
                                                        "Ref": "AWS::Partition"
                                                      },
                                                      ":iam::",
                                                      {
                                                        "Ref": "AWS::AccountId"
                                                      },
                                                      ":root"
                                                    ]
                                                  ]
                                                }
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        }
                                      }
                                    }
                                  },
                                  "DefaultPolicy": {
                                    "id": "DefaultPolicy",
                                    "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/DefaultPolicy",
                                    "children": {
                                      "Resource": {
                                        "id": "Resource",
                                        "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/DefaultPolicy/Resource",
                                        "attributes": {
                                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                          "aws:cdk:cloudformation:props": {
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "s3:GetObject*",
                                                    "s3:GetBucket*",
                                                    "s3:List*"
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    {
                                                      "Fn::GetAtt": [
                                                        "Bucket83908E77",
                                                        "Arn"
                                                      ]
                                                    },
                                                    {
                                                      "Fn::Join": [
                                                        "",
                                                        [
                                                          {
                                                            "Fn::GetAtt": [
                                                              "Bucket83908E77",
                                                              "Arn"
                                                            ]
                                                          },
                                                          "/*"
                                                        ]
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "Action": [
                                                    "s3:DeleteObject*",
                                                    "s3:PutObject*",
                                                    "s3:Abort*"
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    {
                                                      "Fn::GetAtt": [
                                                        "Bucket83908E77",
                                                        "Arn"
                                                      ]
                                                    },
                                                    {
                                                      "Fn::Join": [
                                                        "",
                                                        [
                                                          {
                                                            "Fn::GetAtt": [
                                                              "Bucket83908E77",
                                                              "Arn"
                                                            ]
                                                          },
                                                          "/*"
                                                        ]
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ],
                                              "Version": "2012-10-17"
                                            },
                                            "policyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleDefaultPolicy236BB23E",
                                            "roles": [
                                              {
                                                "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole2D3A619B"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Build": {
                        "id": "Build",
                        "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Build",
                        "children": {
                          "BuildAction": {
                            "id": "BuildAction",
                            "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Build/BuildAction",
                            "children": {
                              "CodePipelineActionRole": {
                                "id": "CodePipelineActionRole",
                                "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                      "aws:cdk:cloudformation:props": {
                                        "assumeRolePolicyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "AWS": {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      "arn:",
                                                      {
                                                        "Ref": "AWS::Partition"
                                                      },
                                                      ":iam::",
                                                      {
                                                        "Ref": "AWS::AccountId"
                                                      },
                                                      ":root"
                                                    ]
                                                  ]
                                                }
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        }
                                      }
                                    }
                                  },
                                  "DefaultPolicy": {
                                    "id": "DefaultPolicy",
                                    "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/DefaultPolicy",
                                    "children": {
                                      "Resource": {
                                        "id": "Resource",
                                        "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/DefaultPolicy/Resource",
                                        "attributes": {
                                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                          "aws:cdk:cloudformation:props": {
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "codebuild:BatchGetBuilds",
                                                    "codebuild:StartBuild",
                                                    "codebuild:StopBuild"
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": {
                                                    "Fn::GetAtt": [
                                                      "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProject8B60D31D",
                                                      "Arn"
                                                    ]
                                                  }
                                                }
                                              ],
                                              "Version": "2012-10-17"
                                            },
                                            "policyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRoleDefaultPolicyF9260D33",
                                            "roles": [
                                              {
                                                "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole5381CB1D"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Copy": {
                        "id": "Copy",
                        "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy",
                        "children": {
                          "CopyAction": {
                            "id": "CopyAction",
                            "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/CopyAction",
                            "children": {
                              "CodePipelineActionRole": {
                                "id": "CodePipelineActionRole",
                                "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                      "aws:cdk:cloudformation:props": {
                                        "assumeRolePolicyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "AWS": {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      "arn:",
                                                      {
                                                        "Ref": "AWS::Partition"
                                                      },
                                                      ":iam::",
                                                      {
                                                        "Ref": "AWS::AccountId"
                                                      },
                                                      ":root"
                                                    ]
                                                  ]
                                                }
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        }
                                      }
                                    }
                                  },
                                  "DefaultPolicy": {
                                    "id": "DefaultPolicy",
                                    "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/DefaultPolicy",
                                    "children": {
                                      "Resource": {
                                        "id": "Resource",
                                        "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/DefaultPolicy/Resource",
                                        "attributes": {
                                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                          "aws:cdk:cloudformation:props": {
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "s3:DeleteObject*",
                                                    "s3:PutObject*",
                                                    "s3:Abort*"
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    {
                                                      "Fn::GetAtt": [
                                                        "Bucket83908E77",
                                                        "Arn"
                                                      ]
                                                    },
                                                    {
                                                      "Fn::Join": [
                                                        "",
                                                        [
                                                          {
                                                            "Fn::GetAtt": [
                                                              "Bucket83908E77",
                                                              "Arn"
                                                            ]
                                                          },
                                                          "/*"
                                                        ]
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "Action": [
                                                    "s3:GetObject*",
                                                    "s3:GetBucket*",
                                                    "s3:List*"
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    {
                                                      "Fn::GetAtt": [
                                                        "Bucket83908E77",
                                                        "Arn"
                                                      ]
                                                    },
                                                    {
                                                      "Fn::Join": [
                                                        "",
                                                        [
                                                          {
                                                            "Fn::GetAtt": [
                                                              "Bucket83908E77",
                                                              "Arn"
                                                            ]
                                                          },
                                                          "/*"
                                                        ]
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ],
                                              "Version": "2012-10-17"
                                            },
                                            "policyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleDefaultPolicy9B2CA74C",
                                            "roles": [
                                              {
                                                "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole60F16D3A"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "InvokeAction": {
                            "id": "InvokeAction",
                            "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/InvokeAction",
                            "children": {
                              "CodePipelineActionRole": {
                                "id": "CodePipelineActionRole",
                                "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                      "aws:cdk:cloudformation:props": {
                                        "assumeRolePolicyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "AWS": {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      "arn:",
                                                      {
                                                        "Ref": "AWS::Partition"
                                                      },
                                                      ":iam::",
                                                      {
                                                        "Ref": "AWS::AccountId"
                                                      },
                                                      ":root"
                                                    ]
                                                  ]
                                                }
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        }
                                      }
                                    }
                                  },
                                  "DefaultPolicy": {
                                    "id": "DefaultPolicy",
                                    "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/DefaultPolicy",
                                    "children": {
                                      "Resource": {
                                        "id": "Resource",
                                        "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/DefaultPolicy/Resource",
                                        "attributes": {
                                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                          "aws:cdk:cloudformation:props": {
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "lambda:ListFunctions",
                                                  "Effect": "Allow",
                                                  "Resource": "*"
                                                },
                                                {
                                                  "Action": "lambda:InvokeFunction",
                                                  "Effect": "Allow",
                                                  "Resource": {
                                                    "Fn::GetAtt": [
                                                      "KinesisReplayInfrastructureKinesisReplayBuildPipelineNotifyLambda9D2FC2E0",
                                                      "Arn"
                                                    ]
                                                  }
                                                }
                                              ],
                                              "Version": "2012-10-17"
                                            },
                                            "policyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleDefaultPolicyE2818116",
                                            "roles": [
                                              {
                                                "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRole9DE755D2"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "AmazonKinesisReplayCopyCommand": {
                    "id": "AmazonKinesisReplayCopyCommand",
                    "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/AmazonKinesisReplayCopyCommand"
                  }
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/SecurityGroup",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "securityGroupIngress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "ipProtocol": "tcp",
                            "fromPort": 22,
                            "toPort": 22,
                            "description": "from 0.0.0.0/0:22"
                          }
                        ],
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        }
                      }
                    }
                  }
                }
              },
              "ReplayRole": {
                "id": "ReplayRole",
                "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/ReplayRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/ReplayRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "ec2.",
                                      {
                                        "Ref": "AWS::URLSuffix"
                                      }
                                    ]
                                  ]
                                }
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonS3ReadOnlyAccess"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/ReplayRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/ReplayRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "cloudwatch:PutMetricData",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "Bucket83908E77",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "Bucket83908E77",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": "kinesis:*",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "KinesisReplayInfrastructureReplayRoleDefaultPolicy351423BD",
                            "roles": [
                              {
                                "Ref": "KinesisReplayInfrastructureReplayRole501258B1"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "InstanceProfile": {
                "id": "InstanceProfile",
                "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/InstanceProfile",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                  "aws:cdk:cloudformation:props": {
                    "roles": [
                      {
                        "Ref": "KinesisReplayInfrastructureReplayRole501258B1"
                      }
                    ]
                  }
                }
              },
              "ReplayInstance": {
                "id": "ReplayInstance",
                "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/ReplayInstance",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::Instance",
                  "aws:cdk:cloudformation:props": {
                    "iamInstanceProfile": {
                      "Ref": "KinesisReplayInfrastructureInstanceProfile4256A29E"
                    },
                    "imageId": {
                      "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
                    },
                    "instanceType": "c5.2xlarge",
                    "keyName": {
                      "Ref": "KeyName"
                    },
                    "monitoring": true,
                    "securityGroupIds": [
                      {
                        "Fn::GetAtt": [
                          "KinesisReplayInfrastructureSecurityGroup192A878A",
                          "GroupId"
                        ]
                      }
                    ],
                    "subnetId": {
                      "Ref": "VPCpublicSubnet1Subnet325F50B2"
                    },
                    "userData": {
                      "Fn::Base64": {
                        "Fn::Join": [
                          "",
                          [
                            "#!/bin/bash -x\n            \n            yum update -y\n            yum install -y tmux\n\n            # install Java 11\n            amazon-linux-extras enable java-openjdk11\n            yum install -y java-11-openjdk\n\n            # copy the replay Java app from s3\n            su ec2-user -l -c \"aws s3 cp --recursive --exclude '*' --include 'amazon-kinesis-replay-*.jar' 's3://",
                            {
                              "Ref": "Bucket83908E77"
                            },
                            "/target/' .\""
                          ]
                        ]
                      }
                    }
                  }
                }
              },
              "KinesisReplayInstance": {
                "id": "KinesisReplayInstance",
                "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayInstance"
              },
              "KinesisReplayCommand": {
                "id": "KinesisReplayCommand",
                "path": "BeamTaxiCount-Demo/KinesisReplayInfrastructure/KinesisReplayCommand"
              }
            }
          },
          "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "BeamTaxiCount-Demo/SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter"
          },
          "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "BeamTaxiCount-Demo/SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118"
          },
          "EmrInfrastructure": {
            "id": "EmrInfrastructure",
            "path": "BeamTaxiCount-Demo/EmrInfrastructure",
            "children": {
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "BeamTaxiCount-Demo/EmrInfrastructure/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Demo/EmrInfrastructure/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "BeamTaxiCount-Demo/EmrInfrastructure/SecurityGroup",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "securityGroupIngress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "ipProtocol": "tcp",
                            "fromPort": 22,
                            "toPort": 22,
                            "description": "from 0.0.0.0/0:22"
                          }
                        ],
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        }
                      }
                    }
                  }
                }
              },
              "ReplayRole": {
                "id": "ReplayRole",
                "path": "BeamTaxiCount-Demo/EmrInfrastructure/ReplayRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Demo/EmrInfrastructure/ReplayRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "ec2.",
                                      {
                                        "Ref": "AWS::URLSuffix"
                                      }
                                    ]
                                  ]
                                }
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonElasticMapReduceforEC2Role"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "InstanceProfile": {
                "id": "InstanceProfile",
                "path": "BeamTaxiCount-Demo/EmrInfrastructure/InstanceProfile",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                  "aws:cdk:cloudformation:props": {
                    "roles": [
                      {
                        "Ref": "EmrInfrastructureReplayRole45BC559F"
                      }
                    ]
                  }
                }
              },
              "EmrCluster": {
                "id": "EmrCluster",
                "path": "BeamTaxiCount-Demo/EmrInfrastructure/EmrCluster",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EMR::Cluster",
                  "aws:cdk:cloudformation:props": {
                    "instances": {
                      "masterInstanceGroup": {
                        "instanceCount": 1,
                        "instanceType": "c5.xlarge",
                        "name": "Master"
                      },
                      "coreInstanceGroup": {
                        "instanceCount": 2,
                        "instanceType": "r5.xlarge",
                        "name": "Core"
                      },
                      "ec2KeyName": {
                        "Ref": "KeyName"
                      },
                      "additionalMasterSecurityGroups": [
                        {
                          "Ref": "EmrInfrastructureSecurityGroupC050C542"
                        }
                      ],
                      "ec2SubnetId": {
                        "Ref": "VPCpublicSubnet1Subnet325F50B2"
                      }
                    },
                    "jobFlowRole": {
                      "Ref": "EmrInfrastructureInstanceProfileA9CB34C5"
                    },
                    "name": "Beam",
                    "serviceRole": "EMR_DefaultRole",
                    "applications": [
                      {
                        "name": "Hadoop"
                      },
                      {
                        "name": "Ganglia"
                      },
                      {
                        "name": "Flink"
                      },
                      {
                        "name": "ZooKeeper"
                      }
                    ],
                    "configurations": [
                      {
                        "classification": "emrfs-site",
                        "configurationProperties": {
                          "fs.s3.maxConnections": "1000"
                        }
                      }
                    ],
                    "releaseLabel": "emr-5.20.0",
                    "visibleToAllUsers": true
                  }
                }
              },
              "SshEmrCluster": {
                "id": "SshEmrCluster",
                "path": "BeamTaxiCount-Demo/EmrInfrastructure/SshEmrCluster"
              },
              "StartFlinkRuntime": {
                "id": "StartFlinkRuntime",
                "path": "BeamTaxiCount-Demo/EmrInfrastructure/StartFlinkRuntime"
              },
              "StartFlinkApplication": {
                "id": "StartFlinkApplication",
                "path": "BeamTaxiCount-Demo/EmrInfrastructure/StartFlinkApplication"
              }
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "BeamTaxiCount-Demo/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "BeamTaxiCount-Demo/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "BeamTaxiCount-Demo/CDKMetadata/Condition"
              }
            }
          }
        }
      },
      "BeamTaxiCount-Complete": {
        "id": "BeamTaxiCount-Complete",
        "path": "BeamTaxiCount-Complete",
        "children": {
          "Bucket": {
            "id": "Bucket",
            "path": "BeamTaxiCount-Complete/Bucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "BeamTaxiCount-Complete/Bucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "versioningConfiguration": {
                      "status": "Enabled"
                    }
                  }
                }
              },
              "Notifications": {
                "id": "Notifications",
                "path": "BeamTaxiCount-Complete/Bucket/Notifications"
              }
            }
          },
          "EmptyBucket": {
            "id": "EmptyBucket",
            "path": "BeamTaxiCount-Complete/EmptyBucket",
            "children": {
              "EmptyBucketLambda": {
                "id": "EmptyBucketLambda",
                "path": "BeamTaxiCount-Complete/EmptyBucket/EmptyBucketLambda",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "BeamTaxiCount-Complete/EmptyBucket/EmptyBucketLambda/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Complete/EmptyBucket/EmptyBucketLambda/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "BeamTaxiCount-Complete/EmptyBucket/EmptyBucketLambda/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Complete/EmptyBucket/EmptyBucketLambda/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "s3:GetObject*",
                                        "s3:GetBucket*",
                                        "s3:List*",
                                        "s3:DeleteObject*",
                                        "s3:PutObject*",
                                        "s3:Abort*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "Bucket83908E77",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": [
                                                  "Bucket83908E77",
                                                  "Arn"
                                                ]
                                              },
                                              "/*"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "EmptyBucketEmptyBucketLambdaServiceRoleDefaultPolicy0872AADF",
                                "roles": [
                                  {
                                    "Ref": "EmptyBucketEmptyBucketLambdaServiceRole67452BDD"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Complete/EmptyBucket/EmptyBucketLambda/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "zipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\n\ndef empty_bucket(event, context):\n    bucket_name = os.environ['bucket_name']\n\n    try:\n        if event['RequestType'] == 'Delete':\n            print(\"empty bucket: \" + bucket_name)\n            \n            bucket = boto3.resource('s3').Bucket(bucket_name)\n            bucket.object_versions.delete()\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})"
                        },
                        "handler": "index.empty_bucket",
                        "role": {
                          "Fn::GetAtt": [
                            "EmptyBucketEmptyBucketLambdaServiceRole67452BDD",
                            "Arn"
                          ]
                        },
                        "runtime": "python3.7",
                        "environment": {
                          "variables": {
                            "bucket_name": {
                              "Ref": "Bucket83908E77"
                            }
                          }
                        },
                        "memorySize": 512,
                        "timeout": 900
                      }
                    }
                  }
                }
              },
              "EmptyBucketResource": {
                "id": "EmptyBucketResource",
                "path": "BeamTaxiCount-Complete/EmptyBucket/EmptyBucketResource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFormation::CustomResource",
                  "aws:cdk:cloudformation:props": {
                    "serviceToken": {
                      "Fn::GetAtt": [
                        "EmptyBucketEmptyBucketLambdaD0E9E93D",
                        "Arn"
                      ]
                    }
                  }
                }
              }
            }
          },
          "S3Bucket": {
            "id": "S3Bucket",
            "path": "BeamTaxiCount-Complete/S3Bucket"
          },
          "BeamTaxiConsumerBuildPipeline": {
            "id": "BeamTaxiConsumerBuildPipeline",
            "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline",
            "children": {
              "DownloadLambda": {
                "id": "DownloadLambda",
                "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/DownloadLambda",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/DownloadLambda/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/DownloadLambda/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/DownloadLambda/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/DownloadLambda/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "s3:PutObject*",
                                        "s3:Abort*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            {
                                              "Fn::GetAtt": [
                                                "Bucket83908E77",
                                                "Arn"
                                              ]
                                            },
                                            "/*"
                                          ]
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "BeamTaxiConsumerBuildPipelineDownloadLambdaServiceRoleDefaultPolicy841A2736",
                                "roles": [
                                  {
                                    "Ref": "BeamTaxiConsumerBuildPipelineDownloadLambdaServiceRoleDDB48159"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/DownloadLambda/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "zipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
                        },
                        "handler": "index.download_sources",
                        "role": {
                          "Fn::GetAtt": [
                            "BeamTaxiConsumerBuildPipelineDownloadLambdaServiceRoleDDB48159",
                            "Arn"
                          ]
                        },
                        "runtime": "python3.7",
                        "environment": {
                          "variables": {
                            "url": "https://github.com/aws-samples/amazon-kinesis-analytics-beam-taxi-consumer/archive/master.zip",
                            "bucket": {
                              "Ref": "Bucket83908E77"
                            },
                            "key": "sources/amazon-kinesis-analytics-beam-taxi-consumer-master.zip"
                          }
                        },
                        "timeout": 30
                      }
                    }
                  }
                }
              },
              "DownloadLambdaResource": {
                "id": "DownloadLambdaResource",
                "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/DownloadLambdaResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/DownloadLambdaResource/Default"
                  }
                }
              },
              "CodebuildProject": {
                "id": "CodebuildProject",
                "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodebuildProject",
                "children": {
                  "Role": {
                    "id": "Role",
                    "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodebuildProject/Role",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodebuildProject/Role/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "codebuild.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodebuildProject/Role/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodebuildProject/Role/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":logs:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":log-group:/aws/codebuild/",
                                              {
                                                "Ref": "BeamTaxiConsumerBuildPipelineCodebuildProjectE94068B3"
                                              }
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":logs:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":log-group:/aws/codebuild/",
                                              {
                                                "Ref": "BeamTaxiConsumerBuildPipelineCodebuildProjectE94068B3"
                                              },
                                              ":*"
                                            ]
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": [
                                        "codebuild:CreateReportGroup",
                                        "codebuild:CreateReport",
                                        "codebuild:UpdateReport",
                                        "codebuild:BatchPutTestCases",
                                        "codebuild:BatchPutCodeCoverages"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":codebuild:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":report-group/",
                                            {
                                              "Ref": "BeamTaxiConsumerBuildPipelineCodebuildProjectE94068B3"
                                            },
                                            "-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": [
                                        "s3:GetObject*",
                                        "s3:GetBucket*",
                                        "s3:List*",
                                        "s3:DeleteObject*",
                                        "s3:PutObject*",
                                        "s3:Abort*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "Bucket83908E77",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": [
                                                  "Bucket83908E77",
                                                  "Arn"
                                                ]
                                              },
                                              "/*"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "BeamTaxiConsumerBuildPipelineCodebuildProjectRoleDefaultPolicy394A0A12",
                                "roles": [
                                  {
                                    "Ref": "BeamTaxiConsumerBuildPipelineCodebuildProjectRole8A633BC6"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodebuildProject/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                      "aws:cdk:cloudformation:props": {
                        "artifacts": {
                          "type": "CODEPIPELINE"
                        },
                        "environment": {
                          "type": "LINUX_CONTAINER",
                          "image": "aws/codebuild/java:openjdk-11",
                          "imagePullCredentialsType": "CODEBUILD",
                          "privilegedMode": false,
                          "computeType": "BUILD_GENERAL1_SMALL"
                        },
                        "serviceRole": {
                          "Fn::GetAtt": [
                            "BeamTaxiConsumerBuildPipelineCodebuildProjectRole8A633BC6",
                            "Arn"
                          ]
                        },
                        "source": {
                          "type": "CODEPIPELINE",
                          "buildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"build\": {\n      \"commands\": [\n        \"cd amazon-kinesis-analytics-beam-taxi-consumer-master\",\n        \"mvn clean package -B\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"files\": [\n      \"target/amazon-kinesis-analytics-beam-taxi-consumer-*.jar\"\n    ],\n    \"discard-paths\": false,\n    \"base-directory\": \"amazon-kinesis-analytics-beam-taxi-consumer-master\"\n  }\n}"
                        },
                        "encryptionKey": "alias/aws/s3"
                      }
                    }
                  }
                }
              },
              "WaitHandle": {
                "id": "WaitHandle",
                "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/WaitHandle",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFormation::WaitConditionHandle",
                  "aws:cdk:cloudformation:props": {}
                }
              },
              "WaitCondition": {
                "id": "WaitCondition",
                "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/WaitCondition",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFormation::WaitCondition",
                  "aws:cdk:cloudformation:props": {
                    "count": 1,
                    "handle": {
                      "Ref": "BeamTaxiConsumerBuildPipelineWaitHandle410EECC2"
                    },
                    "timeout": "1200"
                  }
                }
              },
              "NotifyLambda": {
                "id": "NotifyLambda",
                "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/NotifyLambda",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/NotifyLambda/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/NotifyLambda/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/NotifyLambda/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/NotifyLambda/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "codepipeline:PutJobSuccessResult",
                                        "codepipeline:PutJobFailureResult"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "BeamTaxiConsumerBuildPipelineNotifyLambdaServiceRoleDefaultPolicy3E045A13",
                                "roles": [
                                  {
                                    "Ref": "BeamTaxiConsumerBuildPipelineNotifyLambdaServiceRole94083393"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/NotifyLambda/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "zipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
                        },
                        "handler": "index.notify_build_success",
                        "role": {
                          "Fn::GetAtt": [
                            "BeamTaxiConsumerBuildPipelineNotifyLambdaServiceRole94083393",
                            "Arn"
                          ]
                        },
                        "runtime": "python3.7",
                        "environment": {
                          "variables": {
                            "waitHandleUrl": {
                              "Ref": "BeamTaxiConsumerBuildPipelineWaitHandle410EECC2"
                            }
                          }
                        },
                        "timeout": 10
                      }
                    }
                  }
                }
              },
              "CodePipeline": {
                "id": "CodePipeline",
                "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline",
                "children": {
                  "Role": {
                    "id": "Role",
                    "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Role",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Role/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "codepipeline.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Role/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Role/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "s3:GetObject*",
                                        "s3:GetBucket*",
                                        "s3:List*",
                                        "s3:DeleteObject*",
                                        "s3:PutObject*",
                                        "s3:Abort*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "Bucket83908E77",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": [
                                                  "Bucket83908E77",
                                                  "Arn"
                                                ]
                                              },
                                              "/*"
                                            ]
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "BeamTaxiConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole107A6A77",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "BeamTaxiConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole8A9C2DB3",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "BeamTaxiConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole08009C82",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "BeamTaxiConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleABC84458",
                                          "Arn"
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "BeamTaxiConsumerBuildPipelineCodePipelineRoleDefaultPolicy745C1C6E",
                                "roles": [
                                  {
                                    "Ref": "BeamTaxiConsumerBuildPipelineCodePipelineRoleA2A59BB5"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CodePipeline::Pipeline",
                      "aws:cdk:cloudformation:props": {
                        "roleArn": {
                          "Fn::GetAtt": [
                            "BeamTaxiConsumerBuildPipelineCodePipelineRoleA2A59BB5",
                            "Arn"
                          ]
                        },
                        "stages": [
                          {
                            "name": "Source",
                            "actions": [
                              {
                                "name": "SourceAction",
                                "outputArtifacts": [
                                  {
                                    "name": "Artifact_Source_SourceAction"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Source",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "S3"
                                },
                                "configuration": {
                                  "S3Bucket": {
                                    "Ref": "Bucket83908E77"
                                  },
                                  "S3ObjectKey": "sources/amazon-kinesis-analytics-beam-taxi-consumer-master.zip"
                                },
                                "runOrder": 1,
                                "roleArn": {
                                  "Fn::GetAtt": [
                                    "BeamTaxiConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole107A6A77",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "name": "Build",
                            "actions": [
                              {
                                "name": "BuildAction",
                                "inputArtifacts": [
                                  {
                                    "name": "Artifact_Source_SourceAction"
                                  }
                                ],
                                "outputArtifacts": [
                                  {
                                    "name": "Artifact_Build_BuildAction"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Build",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "CodeBuild"
                                },
                                "configuration": {
                                  "ProjectName": {
                                    "Ref": "BeamTaxiConsumerBuildPipelineCodebuildProjectE94068B3"
                                  }
                                },
                                "runOrder": 1,
                                "roleArn": {
                                  "Fn::GetAtt": [
                                    "BeamTaxiConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole8A9C2DB3",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "name": "Copy",
                            "actions": [
                              {
                                "name": "CopyAction",
                                "inputArtifacts": [
                                  {
                                    "name": "Artifact_Build_BuildAction"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Deploy",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "S3"
                                },
                                "configuration": {
                                  "BucketName": {
                                    "Ref": "Bucket83908E77"
                                  },
                                  "Extract": "true"
                                },
                                "runOrder": 1,
                                "roleArn": {
                                  "Fn::GetAtt": [
                                    "BeamTaxiConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole08009C82",
                                    "Arn"
                                  ]
                                }
                              },
                              {
                                "name": "InvokeAction",
                                "actionTypeId": {
                                  "category": "Invoke",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "Lambda"
                                },
                                "configuration": {
                                  "FunctionName": {
                                    "Ref": "BeamTaxiConsumerBuildPipelineNotifyLambdaEB7E94E5"
                                  }
                                },
                                "runOrder": 2,
                                "roleArn": {
                                  "Fn::GetAtt": [
                                    "BeamTaxiConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleABC84458",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "artifactStore": {
                          "type": "S3",
                          "location": {
                            "Ref": "Bucket83908E77"
                          }
                        }
                      }
                    }
                  },
                  "Source": {
                    "id": "Source",
                    "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Source",
                    "children": {
                      "SourceAction": {
                        "id": "SourceAction",
                        "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Source/SourceAction",
                        "children": {
                          "CodePipelineActionRole": {
                            "id": "CodePipelineActionRole",
                            "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "AWS": {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":iam::",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":root"
                                                ]
                                              ]
                                            }
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    }
                                  }
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "s3:GetObject*",
                                                "s3:GetBucket*",
                                                "s3:List*"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": [
                                                {
                                                  "Fn::GetAtt": [
                                                    "Bucket83908E77",
                                                    "Arn"
                                                  ]
                                                },
                                                {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      {
                                                        "Fn::GetAtt": [
                                                          "Bucket83908E77",
                                                          "Arn"
                                                        ]
                                                      },
                                                      "/*"
                                                    ]
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "Action": [
                                                "s3:DeleteObject*",
                                                "s3:PutObject*",
                                                "s3:Abort*"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": [
                                                {
                                                  "Fn::GetAtt": [
                                                    "Bucket83908E77",
                                                    "Arn"
                                                  ]
                                                },
                                                {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      {
                                                        "Fn::GetAtt": [
                                                          "Bucket83908E77",
                                                          "Arn"
                                                        ]
                                                      },
                                                      "/*"
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "BeamTaxiConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleDefaultPolicy16133A47",
                                        "roles": [
                                          {
                                            "Ref": "BeamTaxiConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole107A6A77"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Build": {
                    "id": "Build",
                    "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Build",
                    "children": {
                      "BuildAction": {
                        "id": "BuildAction",
                        "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Build/BuildAction",
                        "children": {
                          "CodePipelineActionRole": {
                            "id": "CodePipelineActionRole",
                            "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "AWS": {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":iam::",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":root"
                                                ]
                                              ]
                                            }
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    }
                                  }
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "codebuild:BatchGetBuilds",
                                                "codebuild:StartBuild",
                                                "codebuild:StopBuild"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::GetAtt": [
                                                  "BeamTaxiConsumerBuildPipelineCodebuildProjectE94068B3",
                                                  "Arn"
                                                ]
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "BeamTaxiConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRoleDefaultPolicyB6FE722C",
                                        "roles": [
                                          {
                                            "Ref": "BeamTaxiConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole8A9C2DB3"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Copy": {
                    "id": "Copy",
                    "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy",
                    "children": {
                      "CopyAction": {
                        "id": "CopyAction",
                        "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/CopyAction",
                        "children": {
                          "CodePipelineActionRole": {
                            "id": "CodePipelineActionRole",
                            "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "AWS": {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":iam::",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":root"
                                                ]
                                              ]
                                            }
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    }
                                  }
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "s3:DeleteObject*",
                                                "s3:PutObject*",
                                                "s3:Abort*"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": [
                                                {
                                                  "Fn::GetAtt": [
                                                    "Bucket83908E77",
                                                    "Arn"
                                                  ]
                                                },
                                                {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      {
                                                        "Fn::GetAtt": [
                                                          "Bucket83908E77",
                                                          "Arn"
                                                        ]
                                                      },
                                                      "/*"
                                                    ]
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "Action": [
                                                "s3:GetObject*",
                                                "s3:GetBucket*",
                                                "s3:List*"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": [
                                                {
                                                  "Fn::GetAtt": [
                                                    "Bucket83908E77",
                                                    "Arn"
                                                  ]
                                                },
                                                {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      {
                                                        "Fn::GetAtt": [
                                                          "Bucket83908E77",
                                                          "Arn"
                                                        ]
                                                      },
                                                      "/*"
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "BeamTaxiConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleDefaultPolicy46A4F07B",
                                        "roles": [
                                          {
                                            "Ref": "BeamTaxiConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole08009C82"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "InvokeAction": {
                        "id": "InvokeAction",
                        "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/InvokeAction",
                        "children": {
                          "CodePipelineActionRole": {
                            "id": "CodePipelineActionRole",
                            "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "AWS": {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":iam::",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":root"
                                                ]
                                              ]
                                            }
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    }
                                  }
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:ListFunctions",
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            },
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::GetAtt": [
                                                  "BeamTaxiConsumerBuildPipelineNotifyLambdaEB7E94E5",
                                                  "Arn"
                                                ]
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "BeamTaxiConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleDefaultPolicyF8FF4A4E",
                                        "roles": [
                                          {
                                            "Ref": "BeamTaxiConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleABC84458"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "AmazonKinesisAnalyticsBeamTaxiConsumerCopyCommand": {
                "id": "AmazonKinesisAnalyticsBeamTaxiConsumerCopyCommand",
                "path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/AmazonKinesisAnalyticsBeamTaxiConsumerCopyCommand"
              }
            }
          },
          "KeyName": {
            "id": "KeyName",
            "path": "BeamTaxiCount-Complete/KeyName"
          },
          "VPC": {
            "id": "VPC",
            "path": "BeamTaxiCount-Complete/VPC",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "BeamTaxiCount-Complete/VPC/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "BeamTaxiCount-Complete/VPC"
                      }
                    ]
                  }
                }
              },
              "publicSubnet1": {
                "id": "publicSubnet1",
                "path": "BeamTaxiCount-Complete/VPC/publicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "BeamTaxiCount-Complete/VPC/publicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/24",
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "BeamTaxiCount-Complete/VPC/publicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "BeamTaxiCount-Complete/VPC/publicSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "BeamTaxiCount-Complete/VPC/publicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "BeamTaxiCount-Complete/VPC/publicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "BeamTaxiCount-Complete/VPC/publicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCpublicSubnet1RouteTableF591E248"
                        },
                        "subnetId": {
                          "Ref": "VPCpublicSubnet1Subnet325F50B2"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "BeamTaxiCount-Complete/VPC/publicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCpublicSubnet1RouteTableF591E248"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VPCIGWB7E252D3"
                        }
                      }
                    }
                  }
                }
              },
              "publicSubnet2": {
                "id": "publicSubnet2",
                "path": "BeamTaxiCount-Complete/VPC/publicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "BeamTaxiCount-Complete/VPC/publicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.1.0/24",
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "BeamTaxiCount-Complete/VPC/publicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "BeamTaxiCount-Complete/VPC/publicSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "BeamTaxiCount-Complete/VPC/publicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "BeamTaxiCount-Complete/VPC/publicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "BeamTaxiCount-Complete/VPC/publicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCpublicSubnet2RouteTable55DAB1BB"
                        },
                        "subnetId": {
                          "Ref": "VPCpublicSubnet2Subnet2B2DFF71"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "BeamTaxiCount-Complete/VPC/publicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCpublicSubnet2RouteTable55DAB1BB"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VPCIGWB7E252D3"
                        }
                      }
                    }
                  }
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "BeamTaxiCount-Complete/VPC/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "BeamTaxiCount-Complete/VPC"
                      }
                    ]
                  }
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "BeamTaxiCount-Complete/VPC/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "VPCB9E5F0B4"
                    },
                    "internetGatewayId": {
                      "Ref": "VPCIGWB7E252D3"
                    }
                  }
                }
              }
            }
          },
          "EnrichEventsLambda": {
            "id": "EnrichEventsLambda",
            "path": "BeamTaxiCount-Complete/EnrichEventsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "BeamTaxiCount-Complete/EnrichEventsLambda/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Complete/EnrichEventsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "BeamTaxiCount-Complete/EnrichEventsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "zipFile": "'use strict';\nconsole.log('Loading function');\n\nexports.handler = (event, context, callback) => {\n    /* Process the list of records and transform them */\n    const output = event.records.map((record) => ({\n        recordId: record.recordId,\n        result: 'Ok',\n        data: enrichPayload(record),\n    }));\n    \n    console.log(`Processing completed.  Successful records ${output.length}.`);\n    \n    callback(null, { records: output });\n};\n\n\nfunction enrichPayload(record) {\n    const payload = JSON.parse(Buffer.from(record.data, 'base64').toString('utf8'));\n    const timestamp = new Date(record.kinesisRecordMetadata.approximateArrivalTimestamp).toISOString();\n    \n    const enrichedPayload = Object.assign({approximate_arrival_timestamp: timestamp}, payload);\n\n    return Buffer.from(JSON.stringify(enrichedPayload)+\"\\n\").toString('base64');\n}"
                    },
                    "handler": "index.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "EnrichEventsLambdaServiceRoleD32248A6",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs12.x",
                    "timeout": 60
                  }
                }
              }
            }
          },
          "KinesisReplayInfrastructure": {
            "id": "KinesisReplayInfrastructure",
            "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure",
            "children": {
              "KinesisReplayBuildPipeline": {
                "id": "KinesisReplayBuildPipeline",
                "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline",
                "children": {
                  "DownloadLambda": {
                    "id": "DownloadLambda",
                    "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/DownloadLambda",
                    "children": {
                      "ServiceRole": {
                        "id": "ServiceRole",
                        "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/DownloadLambda/ServiceRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/DownloadLambda/ServiceRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "lambda.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "managedPolicyArns": [
                                  {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                      ]
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/DownloadLambda/ServiceRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/DownloadLambda/ServiceRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "s3:PutObject*",
                                            "s3:Abort*"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::Join": [
                                              "",
                                              [
                                                {
                                                  "Fn::GetAtt": [
                                                    "Bucket83908E77",
                                                    "Arn"
                                                  ]
                                                },
                                                "/*"
                                              ]
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineDownloadLambdaServiceRoleDefaultPolicy102A21E6",
                                    "roles": [
                                      {
                                        "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineDownloadLambdaServiceRole86B346C9"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/DownloadLambda/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                          "aws:cdk:cloudformation:props": {
                            "code": {
                              "zipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
                            },
                            "handler": "index.download_sources",
                            "role": {
                              "Fn::GetAtt": [
                                "KinesisReplayInfrastructureKinesisReplayBuildPipelineDownloadLambdaServiceRole86B346C9",
                                "Arn"
                              ]
                            },
                            "runtime": "python3.7",
                            "environment": {
                              "variables": {
                                "url": "https://github.com/aws-samples/amazon-kinesis-replay/archive/release-0.1.0.zip",
                                "bucket": {
                                  "Ref": "Bucket83908E77"
                                },
                                "key": "sources/amazon-kinesis-replay-release-0.1.0.zip"
                              }
                            },
                            "timeout": 30
                          }
                        }
                      }
                    }
                  },
                  "DownloadLambdaResource": {
                    "id": "DownloadLambdaResource",
                    "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/DownloadLambdaResource",
                    "children": {
                      "Default": {
                        "id": "Default",
                        "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/DownloadLambdaResource/Default"
                      }
                    }
                  },
                  "CodebuildProject": {
                    "id": "CodebuildProject",
                    "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodebuildProject",
                    "children": {
                      "Role": {
                        "id": "Role",
                        "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodebuildProject/Role",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodebuildProject/Role/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "codebuild.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodebuildProject/Role/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodebuildProject/Role/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "logs:CreateLogGroup",
                                            "logs:CreateLogStream",
                                            "logs:PutLogEvents"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":logs:",
                                                  {
                                                    "Ref": "AWS::Region"
                                                  },
                                                  ":",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":log-group:/aws/codebuild/",
                                                  {
                                                    "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProject8B60D31D"
                                                  }
                                                ]
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":logs:",
                                                  {
                                                    "Ref": "AWS::Region"
                                                  },
                                                  ":",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":log-group:/aws/codebuild/",
                                                  {
                                                    "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProject8B60D31D"
                                                  },
                                                  ":*"
                                                ]
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Action": [
                                            "codebuild:CreateReportGroup",
                                            "codebuild:CreateReport",
                                            "codebuild:UpdateReport",
                                            "codebuild:BatchPutTestCases",
                                            "codebuild:BatchPutCodeCoverages"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::Join": [
                                              "",
                                              [
                                                "arn:",
                                                {
                                                  "Ref": "AWS::Partition"
                                                },
                                                ":codebuild:",
                                                {
                                                  "Ref": "AWS::Region"
                                                },
                                                ":",
                                                {
                                                  "Ref": "AWS::AccountId"
                                                },
                                                ":report-group/",
                                                {
                                                  "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProject8B60D31D"
                                                },
                                                "-*"
                                              ]
                                            ]
                                          }
                                        },
                                        {
                                          "Action": [
                                            "s3:GetObject*",
                                            "s3:GetBucket*",
                                            "s3:List*",
                                            "s3:DeleteObject*",
                                            "s3:PutObject*",
                                            "s3:Abort*"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::GetAtt": [
                                                "Bucket83908E77",
                                                "Arn"
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  {
                                                    "Fn::GetAtt": [
                                                      "Bucket83908E77",
                                                      "Arn"
                                                    ]
                                                  },
                                                  "/*"
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProjectRoleDefaultPolicyAC53B5B1",
                                    "roles": [
                                      {
                                        "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProjectRole3C10904F"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodebuildProject/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                          "aws:cdk:cloudformation:props": {
                            "artifacts": {
                              "type": "CODEPIPELINE"
                            },
                            "environment": {
                              "type": "LINUX_CONTAINER",
                              "image": "aws/codebuild/java:openjdk-11",
                              "imagePullCredentialsType": "CODEBUILD",
                              "privilegedMode": false,
                              "computeType": "BUILD_GENERAL1_SMALL"
                            },
                            "serviceRole": {
                              "Fn::GetAtt": [
                                "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProjectRole3C10904F",
                                "Arn"
                              ]
                            },
                            "source": {
                              "type": "CODEPIPELINE",
                              "buildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"build\": {\n      \"commands\": [\n        \"cd amazon-kinesis-replay-release-0.1.0\",\n        \"mvn clean package -B\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"files\": [\n      \"target/amazon-kinesis-replay-*.jar\"\n    ],\n    \"discard-paths\": false,\n    \"base-directory\": \"amazon-kinesis-replay-release-0.1.0\"\n  }\n}"
                            },
                            "encryptionKey": "alias/aws/s3"
                          }
                        }
                      }
                    }
                  },
                  "WaitHandle": {
                    "id": "WaitHandle",
                    "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/WaitHandle",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CloudFormation::WaitConditionHandle",
                      "aws:cdk:cloudformation:props": {}
                    }
                  },
                  "WaitCondition": {
                    "id": "WaitCondition",
                    "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/WaitCondition",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CloudFormation::WaitCondition",
                      "aws:cdk:cloudformation:props": {
                        "count": 1,
                        "handle": {
                          "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineWaitHandle3C26CE2C"
                        },
                        "timeout": "1200"
                      }
                    }
                  },
                  "NotifyLambda": {
                    "id": "NotifyLambda",
                    "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/NotifyLambda",
                    "children": {
                      "ServiceRole": {
                        "id": "ServiceRole",
                        "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/NotifyLambda/ServiceRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/NotifyLambda/ServiceRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "lambda.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "managedPolicyArns": [
                                  {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                      ]
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/NotifyLambda/ServiceRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/NotifyLambda/ServiceRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "codepipeline:PutJobSuccessResult",
                                            "codepipeline:PutJobFailureResult"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*"
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineNotifyLambdaServiceRoleDefaultPolicyFE5622CC",
                                    "roles": [
                                      {
                                        "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineNotifyLambdaServiceRole1532D198"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/NotifyLambda/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                          "aws:cdk:cloudformation:props": {
                            "code": {
                              "zipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
                            },
                            "handler": "index.notify_build_success",
                            "role": {
                              "Fn::GetAtt": [
                                "KinesisReplayInfrastructureKinesisReplayBuildPipelineNotifyLambdaServiceRole1532D198",
                                "Arn"
                              ]
                            },
                            "runtime": "python3.7",
                            "environment": {
                              "variables": {
                                "waitHandleUrl": {
                                  "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineWaitHandle3C26CE2C"
                                }
                              }
                            },
                            "timeout": 10
                          }
                        }
                      }
                    }
                  },
                  "CodePipeline": {
                    "id": "CodePipeline",
                    "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline",
                    "children": {
                      "Role": {
                        "id": "Role",
                        "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Role",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Role/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "codepipeline.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Role/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Role/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "s3:GetObject*",
                                            "s3:GetBucket*",
                                            "s3:List*",
                                            "s3:DeleteObject*",
                                            "s3:PutObject*",
                                            "s3:Abort*"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::GetAtt": [
                                                "Bucket83908E77",
                                                "Arn"
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  {
                                                    "Fn::GetAtt": [
                                                      "Bucket83908E77",
                                                      "Arn"
                                                    ]
                                                  },
                                                  "/*"
                                                ]
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole2D3A619B",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole5381CB1D",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole60F16D3A",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRole9DE755D2",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineRoleDefaultPolicyBE99C5D4",
                                    "roles": [
                                      {
                                        "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineRole8619A4EA"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CodePipeline::Pipeline",
                          "aws:cdk:cloudformation:props": {
                            "roleArn": {
                              "Fn::GetAtt": [
                                "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineRole8619A4EA",
                                "Arn"
                              ]
                            },
                            "stages": [
                              {
                                "name": "Source",
                                "actions": [
                                  {
                                    "name": "SourceAction",
                                    "outputArtifacts": [
                                      {
                                        "name": "Artifact_Source_SourceAction"
                                      }
                                    ],
                                    "actionTypeId": {
                                      "category": "Source",
                                      "version": "1",
                                      "owner": "AWS",
                                      "provider": "S3"
                                    },
                                    "configuration": {
                                      "S3Bucket": {
                                        "Ref": "Bucket83908E77"
                                      },
                                      "S3ObjectKey": "sources/amazon-kinesis-replay-release-0.1.0.zip"
                                    },
                                    "runOrder": 1,
                                    "roleArn": {
                                      "Fn::GetAtt": [
                                        "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole2D3A619B",
                                        "Arn"
                                      ]
                                    }
                                  }
                                ]
                              },
                              {
                                "name": "Build",
                                "actions": [
                                  {
                                    "name": "BuildAction",
                                    "inputArtifacts": [
                                      {
                                        "name": "Artifact_Source_SourceAction"
                                      }
                                    ],
                                    "outputArtifacts": [
                                      {
                                        "name": "Artifact_Build_BuildAction"
                                      }
                                    ],
                                    "actionTypeId": {
                                      "category": "Build",
                                      "version": "1",
                                      "owner": "AWS",
                                      "provider": "CodeBuild"
                                    },
                                    "configuration": {
                                      "ProjectName": {
                                        "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProject8B60D31D"
                                      }
                                    },
                                    "runOrder": 1,
                                    "roleArn": {
                                      "Fn::GetAtt": [
                                        "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole5381CB1D",
                                        "Arn"
                                      ]
                                    }
                                  }
                                ]
                              },
                              {
                                "name": "Copy",
                                "actions": [
                                  {
                                    "name": "CopyAction",
                                    "inputArtifacts": [
                                      {
                                        "name": "Artifact_Build_BuildAction"
                                      }
                                    ],
                                    "actionTypeId": {
                                      "category": "Deploy",
                                      "version": "1",
                                      "owner": "AWS",
                                      "provider": "S3"
                                    },
                                    "configuration": {
                                      "BucketName": {
                                        "Ref": "Bucket83908E77"
                                      },
                                      "Extract": "true"
                                    },
                                    "runOrder": 1,
                                    "roleArn": {
                                      "Fn::GetAtt": [
                                        "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole60F16D3A",
                                        "Arn"
                                      ]
                                    }
                                  },
                                  {
                                    "name": "InvokeAction",
                                    "actionTypeId": {
                                      "category": "Invoke",
                                      "version": "1",
                                      "owner": "AWS",
                                      "provider": "Lambda"
                                    },
                                    "configuration": {
                                      "FunctionName": {
                                        "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineNotifyLambda9D2FC2E0"
                                      }
                                    },
                                    "runOrder": 2,
                                    "roleArn": {
                                      "Fn::GetAtt": [
                                        "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRole9DE755D2",
                                        "Arn"
                                      ]
                                    }
                                  }
                                ]
                              }
                            ],
                            "artifactStore": {
                              "type": "S3",
                              "location": {
                                "Ref": "Bucket83908E77"
                              }
                            }
                          }
                        }
                      },
                      "Source": {
                        "id": "Source",
                        "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Source",
                        "children": {
                          "SourceAction": {
                            "id": "SourceAction",
                            "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Source/SourceAction",
                            "children": {
                              "CodePipelineActionRole": {
                                "id": "CodePipelineActionRole",
                                "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                      "aws:cdk:cloudformation:props": {
                                        "assumeRolePolicyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "AWS": {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      "arn:",
                                                      {
                                                        "Ref": "AWS::Partition"
                                                      },
                                                      ":iam::",
                                                      {
                                                        "Ref": "AWS::AccountId"
                                                      },
                                                      ":root"
                                                    ]
                                                  ]
                                                }
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        }
                                      }
                                    }
                                  },
                                  "DefaultPolicy": {
                                    "id": "DefaultPolicy",
                                    "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/DefaultPolicy",
                                    "children": {
                                      "Resource": {
                                        "id": "Resource",
                                        "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/DefaultPolicy/Resource",
                                        "attributes": {
                                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                          "aws:cdk:cloudformation:props": {
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "s3:GetObject*",
                                                    "s3:GetBucket*",
                                                    "s3:List*"
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    {
                                                      "Fn::GetAtt": [
                                                        "Bucket83908E77",
                                                        "Arn"
                                                      ]
                                                    },
                                                    {
                                                      "Fn::Join": [
                                                        "",
                                                        [
                                                          {
                                                            "Fn::GetAtt": [
                                                              "Bucket83908E77",
                                                              "Arn"
                                                            ]
                                                          },
                                                          "/*"
                                                        ]
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "Action": [
                                                    "s3:DeleteObject*",
                                                    "s3:PutObject*",
                                                    "s3:Abort*"
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    {
                                                      "Fn::GetAtt": [
                                                        "Bucket83908E77",
                                                        "Arn"
                                                      ]
                                                    },
                                                    {
                                                      "Fn::Join": [
                                                        "",
                                                        [
                                                          {
                                                            "Fn::GetAtt": [
                                                              "Bucket83908E77",
                                                              "Arn"
                                                            ]
                                                          },
                                                          "/*"
                                                        ]
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ],
                                              "Version": "2012-10-17"
                                            },
                                            "policyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleDefaultPolicy236BB23E",
                                            "roles": [
                                              {
                                                "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole2D3A619B"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Build": {
                        "id": "Build",
                        "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Build",
                        "children": {
                          "BuildAction": {
                            "id": "BuildAction",
                            "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Build/BuildAction",
                            "children": {
                              "CodePipelineActionRole": {
                                "id": "CodePipelineActionRole",
                                "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                      "aws:cdk:cloudformation:props": {
                                        "assumeRolePolicyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "AWS": {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      "arn:",
                                                      {
                                                        "Ref": "AWS::Partition"
                                                      },
                                                      ":iam::",
                                                      {
                                                        "Ref": "AWS::AccountId"
                                                      },
                                                      ":root"
                                                    ]
                                                  ]
                                                }
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        }
                                      }
                                    }
                                  },
                                  "DefaultPolicy": {
                                    "id": "DefaultPolicy",
                                    "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/DefaultPolicy",
                                    "children": {
                                      "Resource": {
                                        "id": "Resource",
                                        "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/DefaultPolicy/Resource",
                                        "attributes": {
                                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                          "aws:cdk:cloudformation:props": {
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "codebuild:BatchGetBuilds",
                                                    "codebuild:StartBuild",
                                                    "codebuild:StopBuild"
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": {
                                                    "Fn::GetAtt": [
                                                      "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProject8B60D31D",
                                                      "Arn"
                                                    ]
                                                  }
                                                }
                                              ],
                                              "Version": "2012-10-17"
                                            },
                                            "policyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRoleDefaultPolicyF9260D33",
                                            "roles": [
                                              {
                                                "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole5381CB1D"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Copy": {
                        "id": "Copy",
                        "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy",
                        "children": {
                          "CopyAction": {
                            "id": "CopyAction",
                            "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/CopyAction",
                            "children": {
                              "CodePipelineActionRole": {
                                "id": "CodePipelineActionRole",
                                "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                      "aws:cdk:cloudformation:props": {
                                        "assumeRolePolicyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "AWS": {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      "arn:",
                                                      {
                                                        "Ref": "AWS::Partition"
                                                      },
                                                      ":iam::",
                                                      {
                                                        "Ref": "AWS::AccountId"
                                                      },
                                                      ":root"
                                                    ]
                                                  ]
                                                }
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        }
                                      }
                                    }
                                  },
                                  "DefaultPolicy": {
                                    "id": "DefaultPolicy",
                                    "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/DefaultPolicy",
                                    "children": {
                                      "Resource": {
                                        "id": "Resource",
                                        "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/DefaultPolicy/Resource",
                                        "attributes": {
                                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                          "aws:cdk:cloudformation:props": {
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "s3:DeleteObject*",
                                                    "s3:PutObject*",
                                                    "s3:Abort*"
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    {
                                                      "Fn::GetAtt": [
                                                        "Bucket83908E77",
                                                        "Arn"
                                                      ]
                                                    },
                                                    {
                                                      "Fn::Join": [
                                                        "",
                                                        [
                                                          {
                                                            "Fn::GetAtt": [
                                                              "Bucket83908E77",
                                                              "Arn"
                                                            ]
                                                          },
                                                          "/*"
                                                        ]
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "Action": [
                                                    "s3:GetObject*",
                                                    "s3:GetBucket*",
                                                    "s3:List*"
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    {
                                                      "Fn::GetAtt": [
                                                        "Bucket83908E77",
                                                        "Arn"
                                                      ]
                                                    },
                                                    {
                                                      "Fn::Join": [
                                                        "",
                                                        [
                                                          {
                                                            "Fn::GetAtt": [
                                                              "Bucket83908E77",
                                                              "Arn"
                                                            ]
                                                          },
                                                          "/*"
                                                        ]
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ],
                                              "Version": "2012-10-17"
                                            },
                                            "policyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleDefaultPolicy9B2CA74C",
                                            "roles": [
                                              {
                                                "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole60F16D3A"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "InvokeAction": {
                            "id": "InvokeAction",
                            "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/InvokeAction",
                            "children": {
                              "CodePipelineActionRole": {
                                "id": "CodePipelineActionRole",
                                "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                      "aws:cdk:cloudformation:props": {
                                        "assumeRolePolicyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "AWS": {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      "arn:",
                                                      {
                                                        "Ref": "AWS::Partition"
                                                      },
                                                      ":iam::",
                                                      {
                                                        "Ref": "AWS::AccountId"
                                                      },
                                                      ":root"
                                                    ]
                                                  ]
                                                }
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        }
                                      }
                                    }
                                  },
                                  "DefaultPolicy": {
                                    "id": "DefaultPolicy",
                                    "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/DefaultPolicy",
                                    "children": {
                                      "Resource": {
                                        "id": "Resource",
                                        "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/DefaultPolicy/Resource",
                                        "attributes": {
                                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                          "aws:cdk:cloudformation:props": {
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "lambda:ListFunctions",
                                                  "Effect": "Allow",
                                                  "Resource": "*"
                                                },
                                                {
                                                  "Action": "lambda:InvokeFunction",
                                                  "Effect": "Allow",
                                                  "Resource": {
                                                    "Fn::GetAtt": [
                                                      "KinesisReplayInfrastructureKinesisReplayBuildPipelineNotifyLambda9D2FC2E0",
                                                      "Arn"
                                                    ]
                                                  }
                                                }
                                              ],
                                              "Version": "2012-10-17"
                                            },
                                            "policyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleDefaultPolicyE2818116",
                                            "roles": [
                                              {
                                                "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRole9DE755D2"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "AmazonKinesisReplayCopyCommand": {
                    "id": "AmazonKinesisReplayCopyCommand",
                    "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/AmazonKinesisReplayCopyCommand"
                  }
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/SecurityGroup",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "securityGroupIngress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "ipProtocol": "tcp",
                            "fromPort": 22,
                            "toPort": 22,
                            "description": "from 0.0.0.0/0:22"
                          }
                        ],
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        }
                      }
                    }
                  }
                }
              },
              "ReplayRole": {
                "id": "ReplayRole",
                "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/ReplayRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/ReplayRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "ec2.",
                                      {
                                        "Ref": "AWS::URLSuffix"
                                      }
                                    ]
                                  ]
                                }
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonS3ReadOnlyAccess"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/ReplayRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/ReplayRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "cloudwatch:PutMetricData",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "Bucket83908E77",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "Bucket83908E77",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": "kinesis:*",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "KinesisReplayInfrastructureReplayRoleDefaultPolicy351423BD",
                            "roles": [
                              {
                                "Ref": "KinesisReplayInfrastructureReplayRole501258B1"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "InstanceProfile": {
                "id": "InstanceProfile",
                "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/InstanceProfile",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                  "aws:cdk:cloudformation:props": {
                    "roles": [
                      {
                        "Ref": "KinesisReplayInfrastructureReplayRole501258B1"
                      }
                    ]
                  }
                }
              },
              "ReplayInstance": {
                "id": "ReplayInstance",
                "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/ReplayInstance",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::Instance",
                  "aws:cdk:cloudformation:props": {
                    "iamInstanceProfile": {
                      "Ref": "KinesisReplayInfrastructureInstanceProfile4256A29E"
                    },
                    "imageId": {
                      "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
                    },
                    "instanceType": "c5.2xlarge",
                    "keyName": {
                      "Ref": "KeyName"
                    },
                    "monitoring": true,
                    "securityGroupIds": [
                      {
                        "Fn::GetAtt": [
                          "KinesisReplayInfrastructureSecurityGroup192A878A",
                          "GroupId"
                        ]
                      }
                    ],
                    "subnetId": {
                      "Ref": "VPCpublicSubnet1Subnet325F50B2"
                    },
                    "userData": {
                      "Fn::Base64": {
                        "Fn::Join": [
                          "",
                          [
                            "#!/bin/bash -x\n            \n            yum update -y\n            yum install -y tmux\n\n            # install Java 11\n            amazon-linux-extras enable java-openjdk11\n            yum install -y java-11-openjdk\n\n            # copy the replay Java app from s3\n            su ec2-user -l -c \"aws s3 cp --recursive --exclude '*' --include 'amazon-kinesis-replay-*.jar' 's3://",
                            {
                              "Ref": "Bucket83908E77"
                            },
                            "/target/' .\""
                          ]
                        ]
                      }
                    }
                  }
                }
              },
              "KinesisReplayInstance": {
                "id": "KinesisReplayInstance",
                "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayInstance"
              },
              "KinesisReplayCommand": {
                "id": "KinesisReplayCommand",
                "path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayCommand"
              }
            }
          },
          "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "BeamTaxiCount-Complete/SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter"
          },
          "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "BeamTaxiCount-Complete/SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118"
          },
          "EmrInfrastructure": {
            "id": "EmrInfrastructure",
            "path": "BeamTaxiCount-Complete/EmrInfrastructure",
            "children": {
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "BeamTaxiCount-Complete/EmrInfrastructure/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Complete/EmrInfrastructure/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "BeamTaxiCount-Complete/EmrInfrastructure/SecurityGroup",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "securityGroupIngress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "ipProtocol": "tcp",
                            "fromPort": 22,
                            "toPort": 22,
                            "description": "from 0.0.0.0/0:22"
                          }
                        ],
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        }
                      }
                    }
                  }
                }
              },
              "ReplayRole": {
                "id": "ReplayRole",
                "path": "BeamTaxiCount-Complete/EmrInfrastructure/ReplayRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Complete/EmrInfrastructure/ReplayRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "ec2.",
                                      {
                                        "Ref": "AWS::URLSuffix"
                                      }
                                    ]
                                  ]
                                }
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonElasticMapReduceforEC2Role"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "InstanceProfile": {
                "id": "InstanceProfile",
                "path": "BeamTaxiCount-Complete/EmrInfrastructure/InstanceProfile",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                  "aws:cdk:cloudformation:props": {
                    "roles": [
                      {
                        "Ref": "EmrInfrastructureReplayRole45BC559F"
                      }
                    ]
                  }
                }
              },
              "EmrCluster": {
                "id": "EmrCluster",
                "path": "BeamTaxiCount-Complete/EmrInfrastructure/EmrCluster",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EMR::Cluster",
                  "aws:cdk:cloudformation:props": {
                    "instances": {
                      "masterInstanceGroup": {
                        "instanceCount": 1,
                        "instanceType": "c5.xlarge",
                        "name": "Master"
                      },
                      "coreInstanceGroup": {
                        "instanceCount": 2,
                        "instanceType": "r5.xlarge",
                        "name": "Core"
                      },
                      "ec2KeyName": {
                        "Ref": "KeyName"
                      },
                      "additionalMasterSecurityGroups": [
                        {
                          "Ref": "EmrInfrastructureSecurityGroupC050C542"
                        }
                      ],
                      "ec2SubnetId": {
                        "Ref": "VPCpublicSubnet1Subnet325F50B2"
                      }
                    },
                    "jobFlowRole": {
                      "Ref": "EmrInfrastructureInstanceProfileA9CB34C5"
                    },
                    "name": "Beam",
                    "serviceRole": "EMR_DefaultRole",
                    "applications": [
                      {
                        "name": "Hadoop"
                      },
                      {
                        "name": "Ganglia"
                      },
                      {
                        "name": "Flink"
                      },
                      {
                        "name": "ZooKeeper"
                      }
                    ],
                    "configurations": [
                      {
                        "classification": "emrfs-site",
                        "configurationProperties": {
                          "fs.s3.maxConnections": "1000"
                        }
                      }
                    ],
                    "releaseLabel": "emr-5.20.0",
                    "visibleToAllUsers": true
                  }
                }
              },
              "SshEmrCluster": {
                "id": "SshEmrCluster",
                "path": "BeamTaxiCount-Complete/EmrInfrastructure/SshEmrCluster"
              },
              "StartFlinkRuntime": {
                "id": "StartFlinkRuntime",
                "path": "BeamTaxiCount-Complete/EmrInfrastructure/StartFlinkRuntime"
              },
              "StartFlinkApplication": {
                "id": "StartFlinkApplication",
                "path": "BeamTaxiCount-Complete/EmrInfrastructure/StartFlinkApplication"
              }
            }
          },
          "InputStream": {
            "id": "InputStream",
            "path": "BeamTaxiCount-Complete/InputStream",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "BeamTaxiCount-Complete/InputStream/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Kinesis::Stream",
                  "aws:cdk:cloudformation:props": {
                    "shardCount": 4,
                    "retentionPeriodHours": 24,
                    "streamEncryption": {
                      "Fn::If": [
                        "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
                        {
                          "Ref": "AWS::NoValue"
                        },
                        {
                          "EncryptionType": "KMS",
                          "KeyId": "alias/aws/kinesis"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "AwsCdkKinesisEncryptedStreamsUnsupportedRegions": {
            "id": "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            "path": "BeamTaxiCount-Complete/AwsCdkKinesisEncryptedStreamsUnsupportedRegions"
          },
          "Dashboard": {
            "id": "Dashboard",
            "path": "BeamTaxiCount-Complete/Dashboard",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "BeamTaxiCount-Complete/Dashboard/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudWatch::Dashboard",
                  "aws:cdk:cloudformation:props": {
                    "dashboardBody": {
                      "Fn::Join": [
                        "",
                        [
                          "{\"widgets\":[{\"type\":\"metric\",\"width\":24,\"height\":6,\"x\":0,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/Kinesis\",\"GetRecords.IteratorAgeMilliseconds\",\"StreamName\",\"",
                          {
                            "Ref": "InputStreamCFB159EA"
                          },
                          "\",{\"period\":60,\"stat\":\"Maximum\"}],[\"AWS/Kinesis\",\"IncomingRecords\",\"StreamName\",\"",
                          {
                            "Ref": "InputStreamCFB159EA"
                          },
                          "\",{\"period\":60,\"stat\":\"Sum\",\"yAxis\":\"right\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":24,\"height\":6,\"x\":0,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"Beam\",\"Number of Trips\",\"StreamName\",\"",
                          {
                            "Ref": "InputStreamCFB159EA"
                          },
                          "\",{\"period\":5,\"stat\":\"Maximum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":24,\"height\":6,\"x\":0,\"y\":12,\"properties\":{\"view\":\"timeSeries\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"Beam\",\"Number of Trips\",\"Borough\",\"Bronx\",\"StreamName\",\"",
                          {
                            "Ref": "InputStreamCFB159EA"
                          },
                          "\",{\"period\":5,\"stat\":\"Maximum\"}],[\"Beam\",\"Number of Trips\",\"Borough\",\"Brooklyn\",\"StreamName\",\"",
                          {
                            "Ref": "InputStreamCFB159EA"
                          },
                          "\",{\"period\":5,\"stat\":\"Maximum\"}],[\"Beam\",\"Number of Trips\",\"Borough\",\"Queens\",\"StreamName\",\"",
                          {
                            "Ref": "InputStreamCFB159EA"
                          },
                          "\",{\"period\":5,\"stat\":\"Maximum\"}],[\"Beam\",\"Number of Trips\",\"Borough\",\"Staten Island\",\"StreamName\",\"",
                          {
                            "Ref": "InputStreamCFB159EA"
                          },
                          "\",{\"period\":5,\"stat\":\"Maximum\"}],[\"Beam\",\"Number of Trips\",\"Borough\",\"Manhattan\",\"StreamName\",\"",
                          {
                            "Ref": "InputStreamCFB159EA"
                          },
                          "\",{\"period\":5,\"stat\":\"Maximum\",\"yAxis\":\"right\"}],[\"Beam\",\"Number of Trips\",\"Borough\",\"Unknown\",\"StreamName\",\"",
                          {
                            "Ref": "InputStreamCFB159EA"
                          },
                          "\",{\"period\":5,\"stat\":\"Maximum\",\"yAxis\":\"right\"}]],\"yAxis\":{}}}]}"
                        ]
                      ]
                    },
                    "dashboardName": {
                      "Ref": "AWS::StackName"
                    }
                  }
                }
              }
            }
          },
          "FirehoseInfrastructure": {
            "id": "FirehoseInfrastructure",
            "path": "BeamTaxiCount-Complete/FirehoseInfrastructure",
            "children": {
              "FirehoseRole": {
                "id": "FirehoseRole",
                "path": "BeamTaxiCount-Complete/FirehoseInfrastructure/FirehoseRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Complete/FirehoseInfrastructure/FirehoseRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "firehose.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "BeamTaxiCount-Complete/FirehoseInfrastructure/FirehoseRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Complete/FirehoseInfrastructure/FirehoseRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "kinesis:DescribeStreamSummary",
                                    "kinesis:GetRecords",
                                    "kinesis:GetShardIterator",
                                    "kinesis:ListShards",
                                    "kinesis:SubscribeToShard"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "InputStreamCFB159EA",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:DeleteObject*",
                                    "s3:PutObject*",
                                    "s3:Abort*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "Bucket83908E77",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "Bucket83908E77",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "EnrichEventsLambda23B68032",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "FirehoseInfrastructureFirehoseRoleDefaultPolicyF3BBC6E6",
                            "roles": [
                              {
                                "Ref": "FirehoseInfrastructureFirehoseRole3E5B243F"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "FirehoseDeliveryStream": {
                "id": "FirehoseDeliveryStream",
                "path": "BeamTaxiCount-Complete/FirehoseInfrastructure/FirehoseDeliveryStream",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::KinesisFirehose::DeliveryStream",
                  "aws:cdk:cloudformation:props": {
                    "deliveryStreamType": "KinesisStreamAsSource",
                    "extendedS3DestinationConfiguration": {
                      "bucketArn": {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "bufferingHints": {
                        "intervalInSeconds": 60,
                        "sizeInMBs": 128
                      },
                      "compressionFormat": "GZIP",
                      "roleArn": {
                        "Fn::GetAtt": [
                          "FirehoseInfrastructureFirehoseRole3E5B243F",
                          "Arn"
                        ]
                      },
                      "prefix": "kinesis-stream-data/",
                      "processingConfiguration": {
                        "enabled": true,
                        "processors": [
                          {
                            "type": "Lambda",
                            "parameters": [
                              {
                                "parameterName": "LambdaArn",
                                "parameterValue": {
                                  "Fn::GetAtt": [
                                    "EnrichEventsLambda23B68032",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "kinesisStreamSourceConfiguration": {
                      "kinesisStreamArn": {
                        "Fn::GetAtt": [
                          "InputStreamCFB159EA",
                          "Arn"
                        ]
                      },
                      "roleArn": {
                        "Fn::GetAtt": [
                          "FirehoseInfrastructureFirehoseRole3E5B243F",
                          "Arn"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "FlinkInfrastructure": {
            "id": "FlinkInfrastructure",
            "path": "BeamTaxiCount-Complete/FlinkInfrastructure",
            "children": {
              "KinesisAnalyticsRole": {
                "id": "KinesisAnalyticsRole",
                "path": "BeamTaxiCount-Complete/FlinkInfrastructure/KinesisAnalyticsRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Complete/FlinkInfrastructure/KinesisAnalyticsRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "kinesisanalytics.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "BeamTaxiCount-Complete/FlinkInfrastructure/KinesisAnalyticsRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Complete/FlinkInfrastructure/KinesisAnalyticsRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "Bucket83908E77",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "Bucket83908E77",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "kinesis:DescribeStreamSummary",
                                    "kinesis:GetRecords",
                                    "kinesis:GetShardIterator",
                                    "kinesis:ListShards",
                                    "kinesis:SubscribeToShard"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "InputStreamCFB159EA",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "cloudwatch:PutMetricData",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "FlinkInfrastructureFlinkLogGroupD9BFEBD6",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "logs:DescribeLogStreams",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "FlinkInfrastructureFlinkLogGroupD9BFEBD6",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "logs:DescribeLogGroups",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:aws:logs:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":log-group:*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":s3:::nyc-tlc"
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":s3:::nyc-tlc/*"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "FlinkInfrastructureKinesisAnalyticsRoleDefaultPolicy2AA4B95F",
                            "roles": [
                              {
                                "Ref": "FlinkInfrastructureKinesisAnalyticsRole71C99707"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "FlinkLogGroup": {
                "id": "FlinkLogGroup",
                "path": "BeamTaxiCount-Complete/FlinkInfrastructure/FlinkLogGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Complete/FlinkInfrastructure/FlinkLogGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                      "aws:cdk:cloudformation:props": {
                        "retentionInDays": 7
                      }
                    }
                  }
                }
              },
              "FlinkLogGroupName": {
                "id": "FlinkLogGroupName",
                "path": "BeamTaxiCount-Complete/FlinkInfrastructure/FlinkLogGroupName"
              },
              "TclBucket": {
                "id": "TclBucket",
                "path": "BeamTaxiCount-Complete/FlinkInfrastructure/TclBucket"
              },
              "FlinkLogStream": {
                "id": "FlinkLogStream",
                "path": "BeamTaxiCount-Complete/FlinkInfrastructure/FlinkLogStream",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Complete/FlinkInfrastructure/FlinkLogStream/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Logs::LogStream",
                      "aws:cdk:cloudformation:props": {
                        "logGroupName": {
                          "Ref": "FlinkInfrastructureFlinkLogGroupD9BFEBD6"
                        }
                      }
                    }
                  }
                }
              },
              "FlinkApplication": {
                "id": "FlinkApplication",
                "path": "BeamTaxiCount-Complete/FlinkInfrastructure/FlinkApplication",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::KinesisAnalyticsV2::Application",
                  "aws:cdk:cloudformation:props": {
                    "runtimeEnvironment": "FLINK-1_8",
                    "serviceExecutionRole": {
                      "Fn::GetAtt": [
                        "FlinkInfrastructureKinesisAnalyticsRole71C99707",
                        "Arn"
                      ]
                    },
                    "applicationConfiguration": {
                      "applicationCodeConfiguration": {
                        "codeContent": {
                          "s3ContentLocation": {
                            "bucketArn": {
                              "Fn::GetAtt": [
                                "Bucket83908E77",
                                "Arn"
                              ]
                            },
                            "fileKey": "target/amazon-kinesis-analytics-beam-taxi-consumer-1.0-SNAPSHOT.jar"
                          }
                        },
                        "codeContentType": "ZIPFILE"
                      },
                      "environmentProperties": {
                        "propertyGroups": [
                          {
                            "propertyGroupId": "BeamApplicationProperties",
                            "propertyMap": {
                              "AwsRegion": {
                                "Ref": "AWS::Region"
                              },
                              "InputStreamName": {
                                "Ref": "InputStreamCFB159EA"
                              },
                              "OutputBoroughs": "false",
                              "InputS3Pattern": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "s3://",
                                    {
                                      "Ref": "Bucket83908E77"
                                    },
                                    "/kinesis-stream-data/*/*/*/*/*"
                                  ]
                                ]
                              },
                              "Source": "kinesis"
                            }
                          }
                        ]
                      },
                      "flinkApplicationConfiguration": {
                        "monitoringConfiguration": {
                          "logLevel": "INFO",
                          "metricsLevel": "TASK",
                          "configurationType": "CUSTOM"
                        },
                        "parallelismConfiguration": {
                          "autoScalingEnabled": false,
                          "parallelism": 4,
                          "parallelismPerKpu": 1,
                          "configurationType": "CUSTOM"
                        }
                      },
                      "applicationSnapshotConfiguration": {
                        "snapshotsEnabled": false
                      }
                    },
                    "applicationName": {
                      "Ref": "AWS::StackName"
                    }
                  }
                }
              },
              "FlinkLogging": {
                "id": "FlinkLogging",
                "path": "BeamTaxiCount-Complete/FlinkInfrastructure/FlinkLogging",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption",
                  "aws:cdk:cloudformation:props": {
                    "applicationName": {
                      "Ref": "FlinkInfrastructureFlinkApplicationBEFFC04F"
                    },
                    "cloudWatchLoggingOption": {
                      "logStreamArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:logs:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":log-group:",
                            {
                              "Ref": "FlinkInfrastructureFlinkLogGroupD9BFEBD6"
                            },
                            ":log-stream:",
                            {
                              "Ref": "FlinkInfrastructureFlinkLogStream37FF822A"
                            }
                          ]
                        ]
                      }
                    }
                  }
                }
              },
              "TerminateAppLambda": {
                "id": "TerminateAppLambda",
                "path": "BeamTaxiCount-Complete/FlinkInfrastructure/TerminateAppLambda",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "BeamTaxiCount-Complete/FlinkInfrastructure/TerminateAppLambda/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Complete/FlinkInfrastructure/TerminateAppLambda/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "BeamTaxiCount-Complete/FlinkInfrastructure/TerminateAppLambda/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "BeamTaxiCount-Complete/FlinkInfrastructure/TerminateAppLambda/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "kinesisanalytics:StopApplication",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":kinesisanalytics:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":application/",
                                            {
                                              "Ref": "FlinkInfrastructureFlinkApplicationBEFFC04F"
                                            }
                                          ]
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "FlinkInfrastructureTerminateAppLambdaServiceRoleDefaultPolicy555FF482",
                                "roles": [
                                  {
                                    "Ref": "FlinkInfrastructureTerminateAppLambdaServiceRoleBC54A969"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Complete/FlinkInfrastructure/TerminateAppLambda/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "zipFile": "import os\nimport boto3\n\nclient = boto3.client('kinesisanalyticsv2')\n\ndef empty_bucket(event, context):\n    response = client.stop_application(\n        ApplicationName=os.environ['application_name']\n    )"
                        },
                        "handler": "index.empty_bucket",
                        "role": {
                          "Fn::GetAtt": [
                            "FlinkInfrastructureTerminateAppLambdaServiceRoleBC54A969",
                            "Arn"
                          ]
                        },
                        "runtime": "python3.7",
                        "environment": {
                          "variables": {
                            "application_name": {
                              "Ref": "FlinkInfrastructureFlinkApplicationBEFFC04F"
                            }
                          }
                        },
                        "memorySize": 512,
                        "timeout": 900
                      }
                    }
                  },
                  "AllowInvoke:BeamTaxiCountCompleteFlinkInfrastructureAppTerminatedTopic87DD645B": {
                    "id": "AllowInvoke:BeamTaxiCountCompleteFlinkInfrastructureAppTerminatedTopic87DD645B",
                    "path": "BeamTaxiCount-Complete/FlinkInfrastructure/TerminateAppLambda/AllowInvoke:BeamTaxiCountCompleteFlinkInfrastructureAppTerminatedTopic87DD645B",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                      "aws:cdk:cloudformation:props": {
                        "action": "lambda:InvokeFunction",
                        "functionName": {
                          "Fn::GetAtt": [
                            "FlinkInfrastructureTerminateAppLambdaB2D53924",
                            "Arn"
                          ]
                        },
                        "principal": "sns.amazonaws.com",
                        "sourceArn": {
                          "Ref": "FlinkInfrastructureAppTerminatedTopicFEFBAAE4"
                        }
                      }
                    }
                  },
                  "AppTerminatedTopic": {
                    "id": "AppTerminatedTopic",
                    "path": "BeamTaxiCount-Complete/FlinkInfrastructure/TerminateAppLambda/AppTerminatedTopic",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "BeamTaxiCount-Complete/FlinkInfrastructure/TerminateAppLambda/AppTerminatedTopic/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::SNS::Subscription",
                          "aws:cdk:cloudformation:props": {
                            "protocol": "lambda",
                            "topicArn": {
                              "Ref": "FlinkInfrastructureAppTerminatedTopicFEFBAAE4"
                            },
                            "endpoint": {
                              "Fn::GetAtt": [
                                "FlinkInfrastructureTerminateAppLambdaB2D53924",
                                "Arn"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "AppTerminatedFilter": {
                "id": "AppTerminatedFilter",
                "path": "BeamTaxiCount-Complete/FlinkInfrastructure/AppTerminatedFilter",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Complete/FlinkInfrastructure/AppTerminatedFilter/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Logs::MetricFilter",
                      "aws:cdk:cloudformation:props": {
                        "filterPattern": "Job reached globally terminal state FINISHED",
                        "logGroupName": {
                          "Ref": "FlinkInfrastructureFlinkLogGroupD9BFEBD6"
                        },
                        "metricTransformations": [
                          {
                            "metricNamespace": "Beam",
                            "metricName": "BeamApplicationFinished",
                            "metricValue": "1",
                            "defaultValue": 0
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "AppTerminatedAlarm": {
                "id": "AppTerminatedAlarm",
                "path": "BeamTaxiCount-Complete/FlinkInfrastructure/AppTerminatedAlarm",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Complete/FlinkInfrastructure/AppTerminatedAlarm/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                      "aws:cdk:cloudformation:props": {
                        "comparisonOperator": "GreaterThanThreshold",
                        "evaluationPeriods": 1,
                        "actionsEnabled": true,
                        "alarmActions": [
                          {
                            "Ref": "FlinkInfrastructureAppTerminatedTopicFEFBAAE4"
                          }
                        ],
                        "metricName": "BeamApplicationFinished",
                        "namespace": "Beam",
                        "period": 60,
                        "statistic": "Sum",
                        "threshold": 0,
                        "treatMissingData": "notBreaching"
                      }
                    }
                  }
                }
              },
              "AppTerminatedTopic": {
                "id": "AppTerminatedTopic",
                "path": "BeamTaxiCount-Complete/FlinkInfrastructure/AppTerminatedTopic",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "BeamTaxiCount-Complete/FlinkInfrastructure/AppTerminatedTopic/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::SNS::Topic",
                      "aws:cdk:cloudformation:props": {}
                    }
                  }
                }
              }
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "BeamTaxiCount-Complete/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "BeamTaxiCount-Complete/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "BeamTaxiCount-Complete/CDKMetadata/Condition"
              }
            }
          }
        }
      }
    }
  }
}